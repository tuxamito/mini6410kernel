diff -ruN linux-3.9.2/arch/arm/mach-s3c64xx/mach-mini6410.c drb-linux-3.9.2/arch/arm/mach-s3c64xx/mach-mini6410.c
--- linux-3.9.2/arch/arm/mach-s3c64xx/mach-mini6410.c	2013-05-16 10:55:43.001833430 +0200
+++ drb-linux-3.9.2/arch/arm/mach-s3c64xx/mach-mini6410.c	2013-05-16 16:37:46.651604714 +0200
@@ -38,6 +38,7 @@
 #include <linux/platform_data/mtd-nand-s3c2410.h>
 #include <plat/regs-serial.h>
 #include <linux/platform_data/touchscreen-s3c2410.h>
+#include <linux/platform_data/asoc-s3c.h>
 
 #include <video/platform_lcd.h>
 #include <video/samsung_fimd.h>
@@ -220,6 +221,13 @@
 	&s3c_device_ohci,
 	&s3c_device_nand,
 	&s3c_device_fb,
+
+#ifdef CONFIG_SND_SAMSUNG_AC97
+	&s3c64xx_device_ac97,
+#else
+	&s3c64xx_device_iisv4,
+#endif
+
 	&mini6410_lcd_powerdev,
 	&s3c_device_adc,
 	&s3c_device_ts,
@@ -322,6 +330,7 @@
 #endif
 
 	s3c_nand_set_platdata(&mini6410_nand_info);
+	s3c64xx_ac97_setup_gpio(0);
 	s3c_fb_set_platdata(&mini6410_lcd_pdata[features.lcd_index]);
 	s3c24xx_ts_set_platdata(NULL);
 
diff -ruN linux-3.9.2/sound/soc/samsung/Kconfig drb-linux-3.9.2/sound/soc/samsung/Kconfig
--- linux-3.9.2/sound/soc/samsung/Kconfig	2013-05-11 16:19:28.000000000 +0200
+++ drb-linux-3.9.2/sound/soc/samsung/Kconfig	2013-05-16 13:28:30.959294876 +0200
@@ -143,6 +143,14 @@
 	help
 	  Sat Y if you want to add support for SoC audio on the SMDK.
 
+config SND_SOC_SAMSUNG_MINI6410_WM9713
+	tristate "SoC AC97 Audio support for Mini6410 with WM9713"
+	depends on SND_SOC_SAMSUNG && MACH_MINI6410
+	select SND_SOC_WM9713
+	select SND_SAMSUNG_AC97
+	help
+	  Sat Y if you want to add support for SoC audio on the Mini6410 board.
+
 config SND_SOC_SMARTQ
 	tristate "SoC I2S Audio support for SmartQ board"
 	depends on SND_SOC_SAMSUNG && MACH_SMARTQ
diff -ruN linux-3.9.2/sound/soc/samsung/Makefile drb-linux-3.9.2/sound/soc/samsung/Makefile
--- linux-3.9.2/sound/soc/samsung/Makefile	2013-05-11 16:19:28.000000000 +0200
+++ drb-linux-3.9.2/sound/soc/samsung/Makefile	2013-05-16 13:28:30.967294916 +0200
@@ -33,6 +33,7 @@
 snd-soc-smdk-wm8580-objs := smdk_wm8580.o
 snd-soc-smdk-wm8994-objs := smdk_wm8994.o
 snd-soc-smdk-wm9713-objs := smdk_wm9713.o
+snd-soc-mini6410-wm9713-objs := mini6410_wm9713.o
 snd-soc-s3c64xx-smartq-wm8987-objs := smartq_wm8987.o
 snd-soc-goni-wm8994-objs := goni_wm8994.o
 snd-soc-smdk-spdif-objs := smdk_spdif.o
@@ -57,6 +58,7 @@
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM8580) += snd-soc-smdk-wm8580.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM8994) += snd-soc-smdk-wm8994.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM9713) += snd-soc-smdk-wm9713.o
+obj-$(CONFIG_SND_SOC_SAMSUNG_MINI6410_WM9713) += snd-soc-mini6410-wm9713.o
 obj-$(CONFIG_SND_SOC_SMARTQ) += snd-soc-s3c64xx-smartq-wm8987.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_SPDIF) += snd-soc-smdk-spdif.o
 obj-$(CONFIG_SND_SOC_GONI_AQUILA_WM8994) += snd-soc-goni-wm8994.o
diff -ruN linux-3.9.2/sound/soc/samsung/mini6410_wm9713.c drb-linux-3.9.2/sound/soc/samsung/mini6410_wm9713.c
--- linux-3.9.2/sound/soc/samsung/mini6410_wm9713.c	1970-01-01 01:00:00.000000000 +0100
+++ drb-linux-3.9.2/sound/soc/samsung/mini6410_wm9713.c	2013-05-16 13:28:30.967294916 +0200
@@ -0,0 +1,137 @@
+/*
+ * mini6410_wm9713.c  --  SoC audio for MINI6410
+ *
+ * Copyright 2010 Samsung Electronics Co. Ltd.
+ * Author: Jaswinder Singh Brar <jassi.brar@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/device.h>
+#include <sound/core.h>
+#include <sound/soc.h>
+#include <sound/soc-dapm.h>
+#include <sound/ac97_codec.h>
+
+#define ARRAY_AND_SIZE(x)	(x), ARRAY_SIZE(x)
+
+static struct snd_soc_card mini6410;
+
+/*
+ Playback (HeadPhone):-
+	$ amixer sset 'Headphone' unmute
+	$ amixer sset 'Right Headphone Out Mux' 'Headphone'
+	$ amixer sset 'Left Headphone Out Mux' 'Headphone'
+	$ amixer sset 'Right HP Mixer PCM' unmute
+	$ amixer sset 'Left HP Mixer PCM' unmute
+
+ Capture (LineIn):-
+	$ amixer sset 'Right Capture Source' 'Line'
+	$ amixer sset 'Left Capture Source' 'Line'
+*/
+
+/* Machine dapm widgets */
+static const struct snd_soc_dapm_widget mini6410_dapm_widgets[] = {
+	SND_SOC_DAPM_MIC("Mic (on-board)", NULL),
+};
+
+/* audio map */
+static struct snd_soc_dapm_route audio_map[] = {
+	{ "MIC1", NULL, "Mic Bias" },
+	{ "Mic Bias", NULL, "Mic (on-board)" },
+};
+
+static int mini6410_ac97_init(struct snd_soc_pcm_runtime *rtd) {
+	struct snd_soc_codec *codec = rtd->codec;
+    struct snd_soc_dapm_context *dapm = &codec->dapm;
+	unsigned short val;
+
+	/* add board specific widgets */
+	snd_soc_dapm_new_controls(dapm, ARRAY_AND_SIZE(mini6410_dapm_widgets));
+
+	/* setup board specific audio path audio_map */
+	snd_soc_dapm_add_routes(dapm, ARRAY_AND_SIZE(audio_map));
+
+	/* Prepare MIC input */
+	val = codec->driver->read(codec, AC97_3D_CONTROL);
+	codec->driver->write(codec, AC97_3D_CONTROL, val | 0xc000);
+
+	/* Static setup for now */
+	snd_soc_dapm_enable_pin(dapm, "Mic (on-board)");
+	snd_soc_dapm_sync(dapm);
+
+	return 0;
+}
+
+static struct snd_soc_dai_link mini6410_dai = {
+	.name = "AC97",
+	.stream_name = "AC97 PCM",
+	.platform_name = "samsung-audio",
+	.cpu_dai_name = "samsung-ac97",
+	.codec_dai_name = "wm9713-hifi",
+	.codec_name = "wm9713-codec",
+	.init = mini6410_ac97_init,
+};
+
+static struct snd_soc_card mini6410 = {
+	.name = "MINI6410",
+	.dai_link = &mini6410_dai,
+	.num_links = 1,
+};
+
+static struct platform_device *mini6410_snd_wm9713_device;
+static struct platform_device *mini6410_snd_ac97_device;
+
+static int __init mini6410_init(void)
+{
+	int ret;
+
+	mini6410_snd_wm9713_device = platform_device_alloc("wm9713-codec", -1);
+	if (!mini6410_snd_wm9713_device)
+		return -ENOMEM;
+
+	ret = platform_device_add(mini6410_snd_wm9713_device);
+	if (ret)
+		goto err1;
+
+	mini6410_snd_ac97_device = platform_device_alloc("soc-audio", -1);
+	if (!mini6410_snd_ac97_device) {
+		ret = -ENOMEM;
+		goto err2;
+	}
+
+	platform_set_drvdata(mini6410_snd_ac97_device, &mini6410);
+
+	ret = platform_device_add(mini6410_snd_ac97_device);
+	if (ret)
+		goto err3;
+
+	return 0;
+
+err3:
+	platform_device_put(mini6410_snd_ac97_device);
+err2:
+	platform_device_del(mini6410_snd_wm9713_device);
+err1:
+	platform_device_put(mini6410_snd_wm9713_device);
+	return ret;
+}
+
+static void __exit mini6410_exit(void)
+{
+	platform_device_unregister(mini6410_snd_ac97_device);
+	platform_device_unregister(mini6410_snd_wm9713_device);
+}
+
+module_init(mini6410_init);
+module_exit(mini6410_exit);
+
+/* Module information */
+MODULE_AUTHOR("Jaswinder Singh Brar, jassi.brar@samsung.com");
+MODULE_DESCRIPTION("ALSA SoC MINI6410+WM9713");
+MODULE_LICENSE("GPL");

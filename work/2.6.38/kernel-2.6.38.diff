diff -ur linux-2.6.38/Makefile fa-linux-2.6.38/Makefile
--- linux-2.6.38/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/Makefile	2011-03-18 10:01:47.000000000 +0100
@@ -188,7 +188,8 @@
 # Default value for CROSS_COMPILE is not to prefix executables
 # Note: Some architectures assign CROSS_COMPILE in their arch/*/Makefile
 export KBUILD_BUILDHOST := $(SUBARCH)
-ARCH		?= $(SUBARCH)
+#ARCH		?= $(SUBARCH)
+ARCH		?= arm
 CROSS_COMPILE	?= $(CONFIG_CROSS_COMPILE:"%"=%)
 
 # Architecture as present in compile.h
diff -ur linux-2.6.38/arch/arm/Kconfig fa-linux-2.6.38/arch/arm/Kconfig
--- linux-2.6.38/arch/arm/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/Kconfig	2011-03-18 10:01:48.000000000 +0100
@@ -669,7 +669,7 @@
 	  Support for StrongARM 11x0 based boards.
 
 config ARCH_S3C2410
-	bool "Samsung S3C2410, S3C2412, S3C2413, S3C2416, S3C2440, S3C2442, S3C2443, S3C2450"
+	bool "Samsung S3C2410/2/3/6, S3C2440/2/3, S3C2450"
 	select GENERIC_GPIO
 	select ARCH_HAS_CPUFREQ
 	select HAVE_CLK
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/Kconfig fa-linux-2.6.38/arch/arm/mach-s3c64xx/Kconfig
--- linux-2.6.38/arch/arm/mach-s3c64xx/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/Kconfig	2011-03-21 04:47:44.000000000 +0100
@@ -98,21 +98,6 @@
 	help
 	  Machine support for the A&W6410
 
-config MACH_MINI6410
-	bool "MINI6410"
-	select CPU_S3C6410
-	select S3C_DEV_HSMMC
-	select S3C_DEV_HSMMC1
-	select S3C64XX_SETUP_SDHCI
-	select S3C_DEV_USB_HOST
-	select S3C_DEV_NAND
-	select S3C_DEV_FB
-	select S3C64XX_SETUP_FB_24BPP
-	select SAMSUNG_DEV_ADC
-	select SAMSUNG_DEV_TS
-	help
-	  Machine support for the FriendlyARM MINI6410
-
 config MACH_REAL6410
 	bool "REAL6410"
 	select CPU_S3C6410
@@ -215,6 +200,46 @@
 	  detected at runtime so the the resulting kernel can be used
 	  with or without the 1192-EV1 fitted.
 
+config MACH_MINI6410
+	bool "MINI6410"
+	select CPU_S3C6410
+	select SAMSUNG_DEV_ADC
+	select S3C_DEV_HSMMC
+	select S3C_DEV_HSMMC1
+	select S3C_DEV_FB
+	select S3C_DEV_USB_HOST
+	select S3C_DEV_USB_HSOTG
+	select S3C_DEV_WDT
+	select S3C_DEV_RTC
+	select HAVE_S3C2410_WATCHDOG
+	select S3C64XX_SETUP_SDHCI
+	select S3C64XX_SETUP_FB_24BPP
+	select S3C64XX_DEV_FIMC0 if VIDEO_SAMSUNG
+	select S3C64XX_DEV_FIMC1 if VIDEO_SAMSUNG
+	select WIRELESS_EXT
+	select WEXT_SPY
+	select WEXT_PRIV
+	select AVERAGE
+	help
+	  Machine support for the FriendlyARM Mini6410
+
+menu "MINI6410 MMC/SD slot setup"
+	depends on MACH_MINI6410
+
+config MINI6410_SD_CH0
+	bool "Use channel 0 (removable)"
+	depends on MACH_MINI6410
+	help
+	  Say Y to enable MMC/SD slot 0 for USB storage, Camera, Wi-Fi etc.
+
+config MINI6410_SD_CH1
+	bool "Use channel 1 (on-board)"
+	depends on MACH_MINI6410
+	help
+	  Say Y to enable the NONREMOVABLE slot for SDIO Wi-Fi.
+
+endmenu
+
 config MACH_NCP
 	bool "NCP"
 	select CPU_S3C6410
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/Makefile fa-linux-2.6.38/arch/arm/mach-s3c64xx/Makefile
--- linux-2.6.38/arch/arm/mach-s3c64xx/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/Makefile	2012-07-27 12:13:56.000000000 +0200
@@ -52,8 +52,8 @@
 obj-$(CONFIG_MACH_ANW6410)	+= mach-anw6410.o
 obj-$(CONFIG_MACH_SMDK6400)	+= mach-smdk6400.o
 obj-$(CONFIG_MACH_SMDK6410)	+= mach-smdk6410.o
+obj-$(CONFIG_MACH_MINI6410)	+= mach-mini6410.o mini6410-lcds.o
 obj-$(CONFIG_MACH_REAL6410)     += mach-real6410.o
-obj-$(CONFIG_MACH_MINI6410)     += mach-mini6410.o
 obj-$(CONFIG_MACH_NCP)		+= mach-ncp.o
 obj-$(CONFIG_MACH_HMT)		+= mach-hmt.o
 obj-$(CONFIG_MACH_SMARTQ)	+= mach-smartq.o
@@ -67,3 +67,4 @@
 obj-$(CONFIG_S3C64XX_DEV_SPI)	+= dev-spi.o
 obj-$(CONFIG_S3C64XX_DEV_TS)	+= dev-ts.o
 obj-$(CONFIG_S3C64XX_DEV_ONENAND1)	+= dev-onenand1.o
+obj-$(CONFIG_TOUCHSCREEN_MINI6410)  += dev-ts-mini6410.o
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/clock.c fa-linux-2.6.38/arch/arm/mach-s3c64xx/clock.c
--- linux-2.6.38/arch/arm/mach-s3c64xx/clock.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/clock.c	2011-03-18 10:01:48.000000000 +0100
@@ -94,6 +94,30 @@
 	.rate		= 48000000,
 };
 
+#ifdef CONFIG_VIDEO_SAMSUNG
+static int s3c64xx_setrate_sclk_cam(struct clk *clk, unsigned long rate)
+{
+	u32 shift = 20;
+	u32 cam_div, cfg;
+	unsigned long src_clk = clk_get_rate(clk->parent);
+
+	cam_div = src_clk / rate;
+
+	if (cam_div > 32)
+		cam_div = 32;
+
+	cfg = __raw_readl(S3C_CLK_DIV0);
+	cfg &= ~(0xf << shift);
+	cfg |= ((cam_div - 1) << shift);
+	__raw_writel(cfg, S3C_CLK_DIV0);
+
+	printk("parent clock for camera: %ld.%03ld MHz, divisor: %d\n", \
+			print_mhz(src_clk), cam_div);
+
+	return 0;
+}
+#endif
+
 static int inline s3c64xx_gate(void __iomem *reg,
 				struct clk *clk,
 				int enable)
@@ -328,7 +352,58 @@
 		.parent		= &clk_h,
 		.enable		= s3c64xx_hclk_ctrl,
 		.ctrlbit	= S3C_CLKCON_HCLK_IHOST,
-	}
+	},
+#ifdef CONFIG_VIDEO_SAMSUNG
+	{
+		.name		= "fimc",
+		.id		= -1,
+		.parent		= &clk_h,
+		.ctrlbit	= S3C_CLKCON_HCLK_CAMIF,
+	}, {
+		.name		= "hclk_mfc",
+		.id		= -1,
+		.parent		= &clk_h,
+		.enable		= s3c64xx_hclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_HCLK_MFC,
+	}, {
+		.name		= "sclk_mfc",
+		.id		= -1,
+		.parent		= &clk_h2,
+		.enable		= s3c64xx_sclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_SCLK_MFC,
+		.usage		= 0,
+		.rate		= 48*1000*1000,
+	}, {
+		.name		= "pclk_mfc",
+		.id		= -1,
+		.parent		= &clk_p,
+		.enable		= s3c64xx_pclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_PCLK_MFC,
+	}, {
+		.name		= "hclk_jpeg",
+		.id		= -1,
+		.parent		= &clk_h,
+		.enable		= s3c64xx_hclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_HCLK_JPEG,
+	}, {
+		.name		= "sclk_jpeg",
+		.id		= -1,
+		.parent		= &clk_h2,
+		.enable		= s3c64xx_sclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_SCLK_JPEG,
+		.usage		= 0,
+		.rate		= 48*1000*1000,
+	}, {
+		.name		= "sclk_cam",
+		.id		= -1,
+		.parent		= &clk_h2,
+		.enable		= s3c64xx_sclk_ctrl,
+		.ctrlbit	= S3C_CLKCON_SCLK_CAM,
+		.ops        = &(struct clk_ops) {
+			.set_rate	= s3c64xx_setrate_sclk_cam,
+		},
+	},
+#endif
 };
 
 
@@ -780,7 +855,14 @@
 	printk(KERN_INFO "S3C64XX: PLL settings, A=%ld, M=%ld, E=%ld\n",
 	       apll, mpll, epll);
 
-	hclk2 = mpll / GET_DIV(clkdiv0, S3C6400_CLKDIV0_HCLK2);
+	if(__raw_readl(S3C64XX_OTHERS) & S3C64XX_OTHERS_SYNCMUXSEL_SYNC) {
+		/* Synchronous mode */
+		hclk2 = apll / GET_DIV(clkdiv0, S3C6400_CLKDIV0_HCLK2);
+	} else {
+		/* Asynchronous mode */
+		hclk2 = mpll / GET_DIV(clkdiv0, S3C6400_CLKDIV0_HCLK2);
+	}
+
 	hclk = hclk2 / GET_DIV(clkdiv0, S3C6400_CLKDIV0_HCLK);
 	pclk = hclk2 / GET_DIV(clkdiv0, S3C6400_CLKDIV0_PCLK);
 
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx: dev-ts-mini6410.c
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: gpio-bank-k.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: gpio-bank-l.h
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/map.h fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/map.h
--- linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/map.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/map.h	2011-03-18 10:01:48.000000000 +0100
@@ -105,6 +105,26 @@
 #define VA_VIC0			(S3C_VA_IRQ + 0x00)
 #define VA_VIC1			(S3C_VA_IRQ + 0x10000)
 
+/* CAMIF, MFC, TV, JPEG... */
+#define S3C64XX_PA_G2D		(0x76100000)
+#define S3C64XX_SZ_G2D		SZ_1M
+#define S3C64XX_PA_G3D		(0x72000000)
+#define S3C64XX_SZ_G3D		SZ_16M
+#define S3C64XX_PA_FIMC		(0x78000000)
+#define S3C64XX_SZ_FIMC		SZ_1M
+#define S3C6400_PA_TVENC	(0x76200000)
+#define S3C_SZ_TVENC		SZ_1M
+#define S3C6400_PA_TVSCALER	(0x76300000)
+#define S3C_SZ_TVSCALER		SZ_1M
+#define S3C6400_PA_ROTATOR	(0x77200000)
+#define S3C_SZ_ROTATOR		SZ_1M
+#define S3C6400_PA_JPEG		(0x78800000)
+#define S3C_SZ_JPEG			SZ_4M
+#define S3C6400_PA_VPP		(0x77000000)
+#define S3C_SZ_VPP			SZ_1M
+#define S3C6400_PA_MFC		(0x7E002000)
+#define S3C_SZ_MFC			SZ_4K
+
 /* compatibiltiy defines. */
 #define S3C_PA_TIMER		S3C64XX_PA_TIMER
 #define S3C_PA_HSMMC0		S3C64XX_PA_HSMMC0
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/memory.h fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/memory.h
--- linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/memory.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/memory.h	2011-12-06 04:21:48.000000000 +0100
@@ -15,6 +15,6 @@
 
 #define PHYS_OFFSET     UL(0x50000000)
 
-#define CONSISTENT_DMA_SIZE	SZ_8M
+#define CONSISTENT_DMA_SIZE	(SZ_8M + SZ_4M + SZ_2M)
 
 #endif
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-fimc.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-g2d.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-lcd.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-mfc.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-pp.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-rotator.h
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/regs-sys.h fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/regs-sys.h
--- linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/regs-sys.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach/regs-sys.h	2011-03-18 10:01:48.000000000 +0100
@@ -23,6 +23,7 @@
 
 #define S3C64XX_OTHERS		S3C_SYSREG(0x900)
 
-#define S3C64XX_OTHERS_USBMASK	(1 << 16)
+#define S3C64XX_OTHERS_USBMASK			(1 << 16)
+#define S3C64XX_OTHERS_SYNCMUXSEL_SYNC	(1 << 6)
 
 #endif /* _PLAT_REGS_SYS_H */
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-tvenc.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: regs-tvscaler.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: s3cfb.h
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx/include/mach: ts.h
diff -ur linux-2.6.38/arch/arm/mach-s3c64xx/mach-mini6410.c fa-linux-2.6.38/arch/arm/mach-s3c64xx/mach-mini6410.c
--- linux-2.6.38/arch/arm/mach-s3c64xx/mach-mini6410.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/mach-s3c64xx/mach-mini6410.c	2011-07-18 06:10:46.000000000 +0200
@@ -1,6 +1,7 @@
 /* linux/arch/arm/mach-s3c64xx/mach-mini6410.c
  *
- * Copyright 2010 Darius Augulis <augulis.darius@gmail.com>
+ * Copyright 2010 FriendlyARM (www.arm9.net)
+ *
  * Copyright 2008 Openmoko, Inc.
  * Copyright 2008 Simtec Electronics
  *	Ben Dooks <ben@simtec.co.uk>
@@ -12,344 +13,507 @@
  *
 */
 
-#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/types.h>
 #include <linux/interrupt.h>
+#include <linux/list.h>
+#include <linux/timer.h>
+#include <linux/init.h>
+#include <linux/serial_core.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/i2c.h>
+#include <linux/leds.h>
 #include <linux/fb.h>
 #include <linux/gpio.h>
-#include <linux/kernel.h>
-#include <linux/list.h>
+#include <linux/delay.h>
+#include <linux/gfp.h>
 #include <linux/dm9000.h>
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/partitions.h>
-#include <linux/serial_core.h>
-#include <linux/types.h>
+#include <linux/proc_fs.h>
+
+#include <video/platform_lcd.h>
 
-#include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
+#include <asm/mach/irq.h>
 
-#include <mach/map.h>
+#include <mach/hardware.h>
 #include <mach/regs-fb.h>
-#include <mach/regs-gpio.h>
+#include <mach/map.h>
+
+#include <asm/irq.h>
+#include <asm/mach-types.h>
+
+#include <plat/regs-serial.h>
 #include <mach/regs-modem.h>
+#include <mach/regs-gpio.h>
+#include <mach/regs-sys.h>
 #include <mach/regs-srom.h>
-#include <mach/s3c6410.h>
-
-#include <plat/adc.h>
-#include <plat/cpu.h>
-#include <plat/devs.h>
+#include <plat/iic.h>
 #include <plat/fb.h>
+#include <plat/gpio-cfg.h>
 #include <plat/nand.h>
-#include <plat/regs-serial.h>
-#include <plat/ts.h>
-
-#include <video/platform_lcd.h>
 
-#define UCON S3C2410_UCON_DEFAULT
-#define ULCON (S3C2410_LCON_CS8 | S3C2410_LCON_PNONE | S3C2410_LCON_STOPB)
-#define UFCON (S3C2410_UFCON_RXTRIG8 | S3C2410_UFCON_FIFOMODE)
+#include <mach/s3c6410.h>
+#include <plat/clock.h>
+#include <plat/devs.h>
+#include <plat/cpu.h>
+#include <plat/adc.h>
+#include <mach/ts.h>
+#include <plat/regs-usb-hsotg-phy.h>
+#include <plat/audio.h>
+#include <plat/fimc.h>
+
+#include <linux/mmc/host.h>
+#include <plat/sdhci.h>
+
+#define UCON S3C2410_UCON_DEFAULT | S3C2410_UCON_UCLK
+#define ULCON S3C2410_LCON_CS8 | S3C2410_LCON_PNONE | S3C2410_LCON_STOPB
+#define UFCON S3C2410_UFCON_RXTRIG8 | S3C2410_UFCON_FIFOMODE
+
+extern void s3c64xx_reserve_bootmem(void);
+extern int s3c_media_read_proc(char *buf, char **start, off_t offset,
+		int count, int *eof, void *data);
 
 static struct s3c2410_uartcfg mini6410_uartcfgs[] __initdata = {
 	[0] = {
-		.hwport	= 0,
-		.flags	= 0,
-		.ucon	= UCON,
-		.ulcon	= ULCON,
-		.ufcon	= UFCON,
+		.hwport	     = 0,
+		.flags	     = 0,
+		.ucon	     = UCON,
+		.ulcon	     = ULCON,
+		.ufcon	     = UFCON,
 	},
 	[1] = {
-		.hwport	= 1,
-		.flags	= 0,
-		.ucon	= UCON,
-		.ulcon	= ULCON,
-		.ufcon	= UFCON,
+		.hwport	     = 1,
+		.flags	     = 0,
+		.ucon	     = UCON,
+		.ulcon	     = ULCON,
+		.ufcon	     = UFCON,
 	},
 	[2] = {
-		.hwport	= 2,
-		.flags	= 0,
-		.ucon	= UCON,
-		.ulcon	= ULCON,
-		.ufcon	= UFCON,
+		.hwport	     = 2,
+		.flags	     = 0,
+		.ucon	     = UCON,
+		.ulcon	     = ULCON,
+		.ufcon	     = UFCON,
 	},
 	[3] = {
-		.hwport	= 3,
-		.flags	= 0,
-		.ucon	= UCON,
-		.ulcon	= ULCON,
-		.ufcon	= UFCON,
+		.hwport	     = 3,
+		.flags	     = 0,
+		.ucon	     = UCON,
+		.ulcon	     = ULCON,
+		.ufcon	     = UFCON,
 	},
 };
 
-/* DM9000AEP 10/100 ethernet controller */
+/* framebuffer and LCD setup. */
 
-static struct resource mini6410_dm9k_resource[] = {
-	[0] = {
-		.start	= S3C64XX_PA_XM0CSN1,
-		.end	= S3C64XX_PA_XM0CSN1 + 1,
-		.flags	= IORESOURCE_MEM
-	},
-	[1] = {
-		.start	= S3C64XX_PA_XM0CSN1 + 4,
-		.end	= S3C64XX_PA_XM0CSN1 + 5,
-		.flags	= IORESOURCE_MEM
-	},
-	[2] = {
-		.start	= S3C_EINT(7),
-		.end	= S3C_EINT(7),
-		.flags	= IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL
+/* GPF15 = LCD backlight control
+ * GPF13 => Panel power
+ * GPN5 = LCD nRESET signal
+ * PWM_TOUT1 => backlight brightness
+ */
+
+static void mini6410_lcd_power_set(struct plat_lcd_data *pd,
+				   unsigned int power)
+{
+	if (power) {
+		gpio_direction_output(S3C64XX_GPF(13), 1);
+		gpio_direction_output(S3C64XX_GPF(15), 1);
+
+		/* fire nRESET on power up */
+		gpio_direction_output(S3C64XX_GPN(5), 0);
+		msleep(10);
+		gpio_direction_output(S3C64XX_GPN(5), 1);
+		msleep(1);
+	} else {
+		gpio_direction_output(S3C64XX_GPF(15), 0);
+		gpio_direction_output(S3C64XX_GPF(13), 0);
 	}
+}
+
+static struct plat_lcd_data mini6410_lcd_power_data = {
+	.set_power	= mini6410_lcd_power_set,
 };
 
-static struct dm9000_plat_data mini6410_dm9k_pdata = {
-	.flags		= (DM9000_PLATF_16BITONLY | DM9000_PLATF_NO_EEPROM),
+static struct platform_device mini6410_lcd_powerdev = {
+	.name			= "platform-lcd",
+	.dev.parent		= &s3c_device_fb.dev,
+	.dev.platform_data	= &mini6410_lcd_power_data,
 };
 
-static struct platform_device mini6410_device_eth = {
-	.name		= "dm9000",
-	.id		= -1,
-	.num_resources	= ARRAY_SIZE(mini6410_dm9k_resource),
-	.resource	= mini6410_dm9k_resource,
-	.dev		= {
-		.platform_data	= &mini6410_dm9k_pdata,
+static struct s3c_fb_pd_win mini6410_fb_win0 = {
+	/* this is to ensure we use win0 */
+	.win_mode	= {
+#if 0
+		.pixclock	= 115440,
+#endif
+		.left_margin	= 0x03,
+		.right_margin	= 0x02,
+		.upper_margin	= 0x01,
+		.lower_margin	= 0x01,
+		.hsync_len	= 0x28,
+		.vsync_len	= 0x01,
+		.xres		= 480,
+		.yres		= 272,
 	},
+	.max_bpp	= 32,
+	.default_bpp	= 16,
 };
 
-static struct mtd_partition mini6410_nand_part[] = {
-	[0] = {
-		.name	= "uboot",
-		.size	= SZ_1M,
-		.offset	= 0,
-	},
-	[1] = {
-		.name	= "kernel",
-		.size	= SZ_2M,
-		.offset	= SZ_1M,
+/* 405566 clocks per frame => 60Hz refresh requires 24333960Hz clock */
+static struct s3c_fb_platdata mini6410_lcd_pdata __initdata = {
+	.setup_gpio	= s3c64xx_fb_gpio_setup_24bpp,
+	.win[0]		= &mini6410_fb_win0,
+	.vidcon0	= VIDCON0_VIDOUT_RGB | VIDCON0_PNRMODE_RGB,
+	.vidcon1	= VIDCON1_INV_HSYNC | VIDCON1_INV_VSYNC,
+};
+
+/* MMC/SD config */
+static struct s3c_sdhci_platdata mini6410_hsmmc0_pdata = {
+    .max_width      = 4,
+    .cd_type        = S3C_SDHCI_CD_INTERNAL,
+};
+
+static struct s3c_sdhci_platdata mini6410_hsmmc1_pdata = {
+    .max_width      = 4,
+    .cd_type        = S3C_SDHCI_CD_PERMANENT,
+};
+
+/* Nand flash */
+struct mtd_partition mini6410_nand_part[] = {
+	{
+		.name		= "Bootloader",
+		.offset		= 0,
+		.size		= (4 * 128 *SZ_1K),
+		.mask_flags	= MTD_CAP_NANDFLASH,
 	},
-	[2] = {
-		.name	= "rootfs",
-		.size	= MTDPART_SIZ_FULL,
-		.offset	= SZ_1M + SZ_2M,
+	{
+		.name		= "Kernel",
+		.offset		= (4 * 128 *SZ_1K),
+		.size		= (5*SZ_1M) ,
+		.mask_flags	= MTD_CAP_NANDFLASH,
 	},
+	{
+		.name		= "File System",
+		.offset		= MTDPART_OFS_APPEND,
+		.size		= MTDPART_SIZ_FULL,
+	}
 };
 
 static struct s3c2410_nand_set mini6410_nand_sets[] = {
 	[0] = {
-		.name		= "nand",
-		.nr_chips	= 1,
-		.nr_partitions	= ARRAY_SIZE(mini6410_nand_part),
-		.partitions	= mini6410_nand_part,
+		.name       = "nand",
+		.nr_chips   = 1,
+		.nr_partitions  = ARRAY_SIZE(mini6410_nand_part),
+		.partitions = mini6410_nand_part,
 	},
 };
 
 static struct s3c2410_platform_nand mini6410_nand_info = {
-	.tacls		= 25,
-	.twrph0		= 55,
-	.twrph1		= 40,
-	.nr_sets	= ARRAY_SIZE(mini6410_nand_sets),
-	.sets		= mini6410_nand_sets,
-};
+	.tacls      = 25,
+	.twrph0     = 55,
+	.twrph1     = 40,
+	.nr_sets    = ARRAY_SIZE(mini6410_nand_sets),
+	.sets       = mini6410_nand_sets,
+};
+
+#ifdef CONFIG_USB_SUPPORT
+/* Initializes OTG Phy. to output 48M clock */
+void s3c_otg_phy_config(int enable) {
+	u32 val;
+
+	if (enable) {
+		__raw_writel(0x0, S3C_PHYPWR);	/* Power up */
+
+		val = __raw_readl(S3C_PHYCLK);
+		val &= ~S3C_PHYCLK_CLKSEL_MASK;
+		__raw_writel(val, S3C_PHYCLK);
+
+		__raw_writel(0x1, S3C_RSTCON);
+		udelay(5);
+		__raw_writel(0x0, S3C_RSTCON);	/* Finish the reset */
+		udelay(5);
+	} else {
+		__raw_writel(0x19, S3C_PHYPWR);	/* Power down */
+	}
+}
+EXPORT_SYMBOL(s3c_otg_phy_config);
+#endif
 
-static struct s3c_fb_pd_win mini6410_fb_win[] = {
-	{
-		.win_mode	= {	/* 4.3" 480x272 */
-			.left_margin	= 3,
-			.right_margin	= 2,
-			.upper_margin	= 1,
-			.lower_margin	= 1,
-			.hsync_len	= 40,
-			.vsync_len	= 1,
-			.xres		= 480,
-			.yres		= 272,
-		},
-		.max_bpp	= 32,
-		.default_bpp	= 16,
-	}, {
-		.win_mode	= {	/* 7.0" 800x480 */
-			.left_margin	= 8,
-			.right_margin	= 13,
-			.upper_margin	= 7,
-			.lower_margin	= 5,
-			.hsync_len	= 3,
-			.vsync_len	= 1,
-			.xres		= 800,
-			.yres		= 480,
-		},
-		.max_bpp	= 32,
-		.default_bpp	= 16,
+/* Ethernet */
+#ifdef CONFIG_DM9000
+#define S3C64XX_PA_DM9000	(0x18000000)
+#define S3C64XX_SZ_DM9000	SZ_1M
+#define S3C64XX_VA_DM9000	S3C_ADDR(0x03b00300)
+
+static struct resource dm9000_resources[] = {
+	[0] = {
+		.start		= S3C64XX_PA_DM9000,
+		.end		= S3C64XX_PA_DM9000 + 3,
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= S3C64XX_PA_DM9000 + 4,
+		.end		= S3C64XX_PA_DM9000 + S3C64XX_SZ_DM9000 - 1,
+		.flags		= IORESOURCE_MEM,
+	},
+	[2] = {
+		.start		= IRQ_EINT(7),
+		.end		= IRQ_EINT(7),
+		.flags		= IORESOURCE_IRQ | IRQF_TRIGGER_HIGH,
 	},
 };
 
-static struct s3c_fb_platdata mini6410_lcd_pdata __initdata = {
-	.setup_gpio	= s3c64xx_fb_gpio_setup_24bpp,
-	.win[0]		= &mini6410_fb_win[0],
-	.vidcon0	= VIDCON0_VIDOUT_RGB | VIDCON0_PNRMODE_RGB,
-	.vidcon1	= VIDCON1_INV_HSYNC | VIDCON1_INV_VSYNC,
+static struct dm9000_plat_data dm9000_setup = {
+	.flags			= DM9000_PLATF_16BITONLY,
+	.dev_addr		= { 0x08, 0x90, 0x00, 0xa0, 0x90, 0x90 },
 };
 
-static void mini6410_lcd_power_set(struct plat_lcd_data *pd,
-				   unsigned int power)
-{
-	if (power)
-		gpio_direction_output(S3C64XX_GPE(0), 1);
-	else
-		gpio_direction_output(S3C64XX_GPE(0), 0);
-}
-
-static struct plat_lcd_data mini6410_lcd_power_data = {
-	.set_power	= mini6410_lcd_power_set,
+static struct platform_device s3c_device_dm9000 = {
+	.name			= "dm9000",
+	.id				= 0,
+	.num_resources	= ARRAY_SIZE(dm9000_resources),
+	.resource		= dm9000_resources,
+	.dev			= {
+		.platform_data = &dm9000_setup,
+	}
 };
 
-static struct platform_device mini6410_lcd_powerdev = {
-	.name			= "platform-lcd",
-	.dev.parent		= &s3c_device_fb.dev,
-	.dev.platform_data	= &mini6410_lcd_power_data,
-};
+static int __init dm9000_set_mac(char *str) {
+	unsigned char addr[6];
+	unsigned int val;
+	int idx = 0;
+	char *p = str, *end;
+
+	while (*p && idx < 6) {
+		val = simple_strtoul(p, &end, 16);
+		if (end <= p) {
+			/* convert failed */
+			break;
+		} else {
+			addr[idx++] = val;
+			p = end;
+			if (*p == ':'|| *p == '-') {
+				p++;
+			} else {
+				break;
+			}
+		}
+	}
 
-static struct s3c2410_ts_mach_info s3c_ts_platform __initdata = {
-	.delay			= 10000,
-	.presc			= 49,
-	.oversampling_shift	= 2,
+	if (idx == 6) {
+		printk("Setup ethernet address to %pM\n", addr);
+		memcpy(dm9000_setup.param_addr, addr, 6);
+	}
+
+	return 1;
+}
+
+__setup("ethmac=", dm9000_set_mac);
+#endif
+
+static struct map_desc mini6410_iodesc[] = {
+	{
+		/* LCD support */
+		.virtual    = (unsigned long)S3C_VA_LCD,
+		.pfn        = __phys_to_pfn(S3C_PA_FB),
+		.length     = SZ_16K,
+		.type       = MT_DEVICE,
+	},
+#ifdef CONFIG_DM9000
+	{
+		.virtual	= (u32)S3C64XX_VA_DM9000,
+		.pfn		= __phys_to_pfn(S3C64XX_PA_DM9000),
+		.length		= S3C64XX_SZ_DM9000,
+		.type		= MT_DEVICE,
+	},
+#endif
 };
 
 static struct platform_device *mini6410_devices[] __initdata = {
-	&mini6410_device_eth,
+#ifdef CONFIG_MINI6410_SD_CH0
 	&s3c_device_hsmmc0,
+#endif
+#ifdef CONFIG_MINI6410_SD_CH1
 	&s3c_device_hsmmc1,
-	&s3c_device_ohci,
+#endif
+	&s3c_device_i2c0,
+#ifdef CONFIG_S3C_DEV_I2C1
+	&s3c_device_i2c1,
+#endif
 	&s3c_device_nand,
 	&s3c_device_fb,
+	&s3c_device_ohci,
+	&s3c_device_usb_hsotg,
+#ifdef CONFIG_SND_SAMSUNG_AC97
+	&s3c64xx_device_ac97,
+#else
+	&s3c64xx_device_iisv4,
+#endif
+	&samsung_asoc_dma,
+
 	&mini6410_lcd_powerdev,
+
+#ifdef CONFIG_DM9000
+	&s3c_device_dm9000,
+#endif
+#ifdef CONFIG_S3C_ADC
 	&s3c_device_adc,
+#endif
+#if defined(CONFIG_TOUCHSCREEN_MINI6410) || defined(CONFIG_SAMSUNG_DEV_TS)
 	&s3c_device_ts,
+#endif
+	&s3c_device_wdt,
+#ifdef CONFIG_S3C_DEV_RTC
+	&s3c_device_rtc,
+#endif
+
+	/* Multimedia support */
+#ifdef CONFIG_VIDEO_SAMSUNG
+	&s3c_device_vpp,
+	&s3c_device_mfc,
+	&s3c_device_tvenc,
+	&s3c_device_tvscaler,
+	&s3c_device_rotator,
+	&s3c_device_jpeg,
+	&s3c_device_fimc0,
+	&s3c_device_fimc1,
+	&s3c_device_g2d,
+	&s3c_device_g3d,
+#endif
+};
+
+static struct i2c_board_info i2c_devs0[] __initdata = {
+	{ I2C_BOARD_INFO("ov965x", 0x30), },
+};
+
+static struct i2c_board_info i2c_devs1[] __initdata = {
+	/* Add your i2c device here */
 };
 
+#ifdef CONFIG_SAMSUNG_DEV_TS
+static struct s3c2410_ts_mach_info s3c_ts_platform __initdata = {
+	.delay			= 10000,
+	.presc			= 49,
+	.oversampling_shift	= 2,
+};
+#endif
+
+#ifdef CONFIG_TOUCHSCREEN_MINI6410
+static struct s3c_ts_mach_info s3c_ts_platform __initdata = {
+	.delay			= 0xFFFF,
+	.presc			= 0xFF,
+	.oversampling_shift	= 2,
+	.resol_bit		= 12,
+	.s3c_adc_con	= ADC_TYPE_2,
+};
+#endif
+
 static void __init mini6410_map_io(void)
 {
 	u32 tmp;
 
-	s3c64xx_init_io(NULL, 0);
+	s3c64xx_init_io(mini6410_iodesc, ARRAY_SIZE(mini6410_iodesc));
 	s3c24xx_init_clocks(12000000);
 	s3c24xx_init_uarts(mini6410_uartcfgs, ARRAY_SIZE(mini6410_uartcfgs));
 
 	/* set the LCD type */
+
 	tmp = __raw_readl(S3C64XX_SPCON);
 	tmp &= ~S3C64XX_SPCON_LCD_SEL_MASK;
 	tmp |= S3C64XX_SPCON_LCD_SEL_RGB;
 	__raw_writel(tmp, S3C64XX_SPCON);
 
-	/* remove the LCD bypass */
+	/* remove the lcd bypass */
 	tmp = __raw_readl(S3C64XX_MODEM_MIFPCON);
 	tmp &= ~MIFPCON_LCD_BYPASS;
 	__raw_writel(tmp, S3C64XX_MODEM_MIFPCON);
-}
-
-/*
- * mini6410_features string
- *
- * 0-9 LCD configuration
- *
- */
-static char mini6410_features_str[12] __initdata = "0";
 
-static int __init mini6410_features_setup(char *str)
-{
-	if (str)
-		strlcpy(mini6410_features_str, str,
-			sizeof(mini6410_features_str));
-	return 1;
-}
-
-__setup("mini6410=", mini6410_features_setup);
-
-#define FEATURE_SCREEN (1 << 0)
-
-struct mini6410_features_t {
-	int done;
-	int lcd_index;
-};
-
-static void mini6410_parse_features(
-		struct mini6410_features_t *features,
-		const char *features_str)
-{
-	const char *fp = features_str;
-
-	features->done = 0;
-	features->lcd_index = 0;
-
-	while (*fp) {
-		char f = *fp++;
-
-		switch (f) {
-		case '0'...'9':	/* tft screen */
-			if (features->done & FEATURE_SCREEN) {
-				printk(KERN_INFO "MINI6410: '%c' ignored, "
-					"screen type already set\n", f);
-			} else {
-				int li = f - '0';
-				if (li >= ARRAY_SIZE(mini6410_fb_win))
-					printk(KERN_INFO "MINI6410: '%c' out "
-						"of range LCD mode\n", f);
-				else {
-					features->lcd_index = li;
-				}
-			}
-			features->done |= FEATURE_SCREEN;
-			break;
-		}
-	}
+#ifdef CONFIG_VIDEO_SAMSUNG
+	s3c64xx_reserve_bootmem();
+#endif
 }
 
 static void __init mini6410_machine_init(void)
 {
 	u32 cs1;
-	struct mini6410_features_t features = { 0 };
-
-	printk(KERN_INFO "MINI6410: Option string mini6410=%s\n",
-			mini6410_features_str);
-
-	/* Parse the feature string */
-	mini6410_parse_features(&features, mini6410_features_str);
-
-	mini6410_lcd_pdata.win[0] = &mini6410_fb_win[features.lcd_index];
 
-	printk(KERN_INFO "MINI6410: selected LCD display is %dx%d\n",
-		mini6410_lcd_pdata.win[0]->win_mode.xres,
-		mini6410_lcd_pdata.win[0]->win_mode.yres);
+	s3c_i2c0_set_platdata(NULL);
+#ifdef CONFIG_S3C_DEV_I2C1
+	s3c_i2c1_set_platdata(NULL);
+#endif
 
-	s3c_nand_set_platdata(&mini6410_nand_info);
 	s3c_fb_set_platdata(&mini6410_lcd_pdata);
+
+#ifdef CONFIG_SAMSUNG_DEV_TS
 	s3c24xx_ts_set_platdata(&s3c_ts_platform);
+#endif
+#ifdef CONFIG_TOUCHSCREEN_MINI6410
+	s3c_ts_set_platdata(&s3c_ts_platform);
+#endif
+
+	s3c_sdhci0_set_platdata(&mini6410_hsmmc0_pdata);
+	s3c_sdhci1_set_platdata(&mini6410_hsmmc1_pdata);
+
+#ifdef CONFIG_MTD_NAND_S3C
+	s3c_device_nand.name = "s3c6410-nand";
+#endif
+	s3c_nand_set_platdata(&mini6410_nand_info);
+
+	s3c64xx_ac97_setup_gpio(0);
 
 	/* configure nCS1 width to 16 bits */
 
 	cs1 = __raw_readl(S3C64XX_SROM_BW) &
-		~(S3C64XX_SROM_BW__CS_MASK << S3C64XX_SROM_BW__NCS1__SHIFT);
+		    ~(S3C64XX_SROM_BW__CS_MASK << S3C64XX_SROM_BW__NCS1__SHIFT);
 	cs1 |= ((1 << S3C64XX_SROM_BW__DATAWIDTH__SHIFT) |
 		(1 << S3C64XX_SROM_BW__WAITENABLE__SHIFT) |
 		(1 << S3C64XX_SROM_BW__BYTEENABLE__SHIFT)) <<
-			S3C64XX_SROM_BW__NCS1__SHIFT;
+						   S3C64XX_SROM_BW__NCS1__SHIFT;
 	__raw_writel(cs1, S3C64XX_SROM_BW);
 
 	/* set timing for nCS1 suitable for ethernet chip */
 
 	__raw_writel((0 << S3C64XX_SROM_BCX__PMC__SHIFT) |
-		(6 << S3C64XX_SROM_BCX__TACP__SHIFT) |
-		(4 << S3C64XX_SROM_BCX__TCAH__SHIFT) |
-		(1 << S3C64XX_SROM_BCX__TCOH__SHIFT) |
-		(13 << S3C64XX_SROM_BCX__TACC__SHIFT) |
-		(4 << S3C64XX_SROM_BCX__TCOS__SHIFT) |
-		(0 << S3C64XX_SROM_BCX__TACS__SHIFT), S3C64XX_SROM_BC1);
+		     (6 << S3C64XX_SROM_BCX__TACP__SHIFT) |
+		     (4 << S3C64XX_SROM_BCX__TCAH__SHIFT) |
+		     (1 << S3C64XX_SROM_BCX__TCOH__SHIFT) |
+		     (0xe << S3C64XX_SROM_BCX__TACC__SHIFT) |
+		     (4 << S3C64XX_SROM_BCX__TCOS__SHIFT) |
+		     (0 << S3C64XX_SROM_BCX__TACS__SHIFT), S3C64XX_SROM_BC1);
 
+	gpio_request(S3C64XX_GPN(5), "LCD power");
+	gpio_request(S3C64XX_GPF(13), "LCD power");
 	gpio_request(S3C64XX_GPF(15), "LCD power");
-	gpio_request(S3C64XX_GPE(0), "LCD power");
+
+	if (ARRAY_SIZE(i2c_devs0)) {
+		i2c_register_board_info(0, i2c_devs0, ARRAY_SIZE(i2c_devs0));
+	}
+	if (ARRAY_SIZE(i2c_devs1)) {
+		i2c_register_board_info(1, i2c_devs1, ARRAY_SIZE(i2c_devs1));
+	}
+
+#ifdef CONFIG_S3C64XX_DEV_FIMC0
+	s3c_fimc0_set_platdata(NULL);
+#endif
+#ifdef CONFIG_S3C64XX_DEV_FIMC1
+	s3c_fimc1_set_platdata(NULL);
+#endif
 
 	platform_add_devices(mini6410_devices, ARRAY_SIZE(mini6410_devices));
+
+#ifdef CONFIG_VIDEO_SAMSUNG
+	create_proc_read_entry("videomem", 0, NULL, s3c_media_read_proc, NULL);
+#endif
 }
 
 MACHINE_START(MINI6410, "MINI6410")
-	/* Maintainer: Darius Augulis <augulis.darius@gmail.com> */
+	/* Maintainer: Ben Dooks <ben-linux@fluff.org> */
 	.boot_params	= S3C64XX_PA_SDRAM + 0x100,
+
 	.init_irq	= s3c6410_init_irq,
 	.map_io		= mini6410_map_io,
 	.init_machine	= mini6410_machine_init,
Only in fa-linux-2.6.38/arch/arm/mach-s3c64xx: mini6410-lcds.c
diff -ur linux-2.6.38/arch/arm/plat-samsung/Kconfig fa-linux-2.6.38/arch/arm/plat-samsung/Kconfig
--- linux-2.6.38/arch/arm/plat-samsung/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/Kconfig	2011-03-18 10:01:49.000000000 +0100
@@ -273,6 +273,28 @@
 	help
 	  Compile in platform device definitions for keypad
 
+config S3C64XX_DEV_FIMC0
+	bool
+	help
+	  Compile in platform device definitions for FIMC controller 0
+
+config S3C64XX_DEV_FIMC1
+	bool
+	help
+	  Compile in platform device definitions for FIMC controller 1
+
+config S3C64XX_SETUP_FIMC0
+	bool
+	default y if S3C64XX_DEV_FIMC0
+	help
+	  Common setup code for FIMC controller 0
+
+config S3C64XX_SETUP_FIMC1
+	bool
+	default y if S3C64XX_DEV_FIMC1
+	help
+	  Common setup code for FIMC controller 1
+
 # DMA
 
 config S3C_DMA
diff -ur linux-2.6.38/arch/arm/plat-samsung/Makefile fa-linux-2.6.38/arch/arm/plat-samsung/Makefile
--- linux-2.6.38/arch/arm/plat-samsung/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/Makefile	2011-03-18 10:01:49.000000000 +0100
@@ -60,6 +60,15 @@
 obj-$(CONFIG_SAMSUNG_DEV_TS)	+= dev-ts.o
 obj-$(CONFIG_SAMSUNG_DEV_KEYPAD)	+= dev-keypad.o
 
+ifdef CONFIG_VIDEO_SAMSUNG
+obj-y				+= bootmem.o
+obj-y				+= dev-video.o
+endif
+obj-$(CONFIG_S3C64XX_DEV_FIMC0)	+= dev-fimc0.o
+obj-$(CONFIG_S3C64XX_DEV_FIMC1)	+= dev-fimc1.o
+obj-$(CONFIG_S3C64XX_SETUP_FIMC0)	+= setup-fimc0.o
+obj-$(CONFIG_S3C64XX_SETUP_FIMC1)	+= setup-fimc1.o
+
 # DMA support
 
 obj-$(CONFIG_S3C_DMA)		+= dma.o
Only in fa-linux-2.6.38/arch/arm/plat-samsung: bootmem.c
Only in fa-linux-2.6.38/arch/arm/plat-samsung: dev-fimc0.c
Only in fa-linux-2.6.38/arch/arm/plat-samsung: dev-fimc1.c
Only in fa-linux-2.6.38/arch/arm/plat-samsung: dev-video.c
Only in fa-linux-2.6.38/arch/arm/plat-samsung/include/plat: ctouch.h
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/devs.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/devs.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/devs.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/devs.h	2011-03-18 10:01:49.000000000 +0100
@@ -130,6 +130,17 @@
 
 extern struct platform_device samsung_device_keypad;
 
+extern struct platform_device s3c_device_g2d;
+extern struct platform_device s3c_device_g3d;
+extern struct platform_device s3c_device_vpp;
+extern struct platform_device s3c_device_tvenc;
+extern struct platform_device s3c_device_tvscaler;
+extern struct platform_device s3c_device_rotator;
+extern struct platform_device s3c_device_jpeg;
+extern struct platform_device s3c_device_fimc0;
+extern struct platform_device s3c_device_fimc1;
+extern struct platform_device s3c_device_mfc;
+
 extern struct platform_device s5p_device_fimc0;
 extern struct platform_device s5p_device_fimc1;
 extern struct platform_device s5p_device_fimc2;
Only in fa-linux-2.6.38/arch/arm/plat-samsung/include/plat: fimc.h
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/map-base.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/map-base.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/map-base.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/map-base.h	2011-03-18 10:01:49.000000000 +0100
@@ -1,4 +1,4 @@
-/* linux/include/asm-arm/plat-s3c/map.h
+/* linux/arch/arm/plat-samsung/include/plat/map-base.h
  *
  * Copyright 2003, 2007 Simtec Electronics
  *	http://armlinux.simtec.co.uk/
@@ -36,6 +36,7 @@
 #define S3C_VA_TIMER	S3C_ADDR(0x00300000)	/* timer block */
 #define S3C_VA_WATCHDOG	S3C_ADDR(0x00400000)	/* watchdog */
 #define S3C_VA_UART	S3C_ADDR(0x01000000)	/* UART */
+#define S3C_VA_LCD 	S3C_ADDR(0x01100000)	/* LCD */
 
 /* This is used for the CPU specific mappings that may be needed, so that
  * they do not need to directly used S3C_ADDR() and thus make it easier to
Only in fa-linux-2.6.38/arch/arm/plat-samsung/include/plat: media.h
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/pll6553x.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/pll6553x.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/pll6553x.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/pll6553x.h	2011-03-18 10:01:49.000000000 +0100
@@ -15,9 +15,9 @@
 
 /* S3C6400 and compatible (S3C2416, etc.) EPLL code */
 
-#define PLL6553X_MDIV_MASK	((1 << (23-16)) - 1)
-#define PLL6553X_PDIV_MASK	((1 << (13-8)) - 1)
-#define PLL6553X_SDIV_MASK	((1 << (2-0)) - 1)
+#define PLL6553X_MDIV_MASK	((1 << (23-16+1)) - 1)
+#define PLL6553X_PDIV_MASK	((1 << (13-8+1)) - 1)
+#define PLL6553X_SDIV_MASK	((1 << (2-0+1)) - 1)
 #define PLL6553X_MDIV_SHIFT	(16)
 #define PLL6553X_PDIV_SHIFT	(8)
 #define PLL6553X_SDIV_SHIFT	(0)
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-adc.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-adc.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-adc.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-adc.h	2011-03-18 10:01:49.000000000 +0100
@@ -12,6 +12,7 @@
 #ifndef __ASM_ARCH_REGS_ADC_H
 #define __ASM_ARCH_REGS_ADC_H "regs-adc.h"
 
+
 #define S3C2410_ADCREG(x) (x)
 
 #define S3C2410_ADCCON	   S3C2410_ADCREG(0x00)
@@ -59,6 +60,64 @@
 #define S3C2410_ADCDAT1_XY_PST		(0x3<<12)
 #define S3C2410_ADCDAT1_YPDATA_MASK	(0x03FF)
 
-#endif /* __ASM_ARCH_REGS_ADC_H */
 
+/*--------------------------- Common definitions for S3C  ---------------------------*/
+/* The following definitions will be applied to S3C24XX, S3C64XX, S5PC1XX.	     */
+/*-----------------------------------------------------------------------------------*/
+
+#define S3C_ADCREG(x) 			(x)
+
+#define S3C_ADCCON	   		S3C_ADCREG(0x00)
+#define S3C_ADCTSC	  		S3C_ADCREG(0x04)
+#define S3C_ADCDLY	   		S3C_ADCREG(0x08)
+#define S3C_ADCDAT0	   		S3C_ADCREG(0x0C)
+#define S3C_ADCDAT1	   		S3C_ADCREG(0x10)
+#define S3C_ADCUPDN			S3C_ADCREG(0x14)
+#define S3C_ADCCLRINT			S3C_ADCREG(0x18)
+#define S3C_ADCMUX			S3C_ADCREG(0x1C)
+#define S3C_ADCCLRWK			S3C_ADCREG(0x20)
+
+/* ADCCON Register Bits */
+#define S3C_ADCCON_RESSEL_10BIT		(0x0<<16)
+#define S3C_ADCCON_RESSEL_12BIT		(0x1<<16)
+#define S3C_ADCCON_ECFLG		(1<<15)
+#define S3C_ADCCON_PRSCEN		(1<<14)
+#define S3C_ADCCON_PRSCVL(x)		(((x)&0xFF)<<6)
+#define S3C_ADCCON_PRSCVLMASK		(0xFF<<6)
+#define S3C_ADCCON_SELMUX(x)		(((x)&0x7)<<3)
+#define S3C_ADCCON_SELMUX_1(x)		(((x)&0xF)<<0)
+#define S3C_ADCCON_MUXMASK		(0x7<<3)
+#define S3C_ADCCON_RESSEL_10BIT_1	(0x0<<3)
+#define S3C_ADCCON_RESSEL_12BIT_1	(0x1<<3)
+#define S3C_ADCCON_STDBM		(1<<2)
+#define S3C_ADCCON_READ_START		(1<<1)
+#define S3C_ADCCON_ENABLE_START		(1<<0)
+#define S3C_ADCCON_STARTMASK		(0x3<<0)
+
+/* ADCTSC Register Bits */
+#define S3C_ADCTSC_UD_SEN		(1<<8)
+#define S3C_ADCTSC_YM_SEN		(1<<7)
+#define S3C_ADCTSC_YP_SEN		(1<<6)
+#define S3C_ADCTSC_XM_SEN		(1<<5)
+#define S3C_ADCTSC_XP_SEN		(1<<4)
+#define S3C_ADCTSC_PULL_UP_DISABLE	(1<<3)
+#define S3C_ADCTSC_AUTO_PST		(1<<2)
+#define S3C_ADCTSC_XY_PST(x)		(((x)&0x3)<<0)
+
+/* ADCDAT0 Bits */
+#define S3C_ADCDAT0_UPDOWN		(1<<15)
+#define S3C_ADCDAT0_AUTO_PST		(1<<14)
+#define S3C_ADCDAT0_XY_PST		(0x3<<12)
+#define S3C_ADCDAT0_XPDATA_MASK		(0x03FF)
+#define S3C_ADCDAT0_XPDATA_MASK_12BIT	(0x0FFF)
+
+/* ADCDAT1 Bits */
+#define S3C_ADCDAT1_UPDOWN		(1<<15)
+#define S3C_ADCDAT1_AUTO_PST		(1<<14)
+#define S3C_ADCDAT1_XY_PST		(0x3<<12)
+#define S3C_ADCDAT1_YPDATA_MASK		(0x03FF)
+#define S3C_ADCDAT1_YPDATA_MASK_12BIT	(0x0FFF)
+
+
+#endif /* __ASM_ARCH_REGS_ADC_H */
 
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-fb-v4.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-fb-v4.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-fb-v4.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-fb-v4.h	2011-03-18 10:01:49.000000000 +0100
@@ -33,6 +33,7 @@
 #define VIDTCON0				(0x10)
 #define VIDTCON1				(0x14)
 #define VIDTCON2				(0x18)
+#define VIDTCON3				(0x1C)
 
 /* Window position controls */
 
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-timer.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-timer.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-timer.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-timer.h	2011-03-18 10:01:49.000000000 +0100
@@ -1,4 +1,4 @@
-/* arch/arm/mach-s3c2410/include/mach/regs-timer.h
+/* arch/arm/plat-samsung/include/mach/regs-timer.h
  *
  * Copyright (c) 2003 Simtec Electronics <linux@simtec.co.uk>
  *		      http://www.simtec.co.uk/products/SWLINUX/
@@ -118,7 +118,107 @@
 #define S3C2410_TCON_T0MANUALUPD  (1<<1)
 #define S3C2410_TCON_T0START	  (1<<0)
 
-#endif /*  __ASM_ARCH_REGS_TIMER_H */
+/* Interrupt Control and Status register*/
+#define S3C_TINT_CSTAT_T4INT    (1<<9)
+#define S3C_TINT_CSTAT_T3INT    (1<<8)
+#define S3C_TINT_CSTAT_T2INT    (1<<7)
+#define S3C_TINT_CSTAT_T1INT    (1<<6)
+#define S3C_TINT_CSTAT_T0INT    (1<<5)
+#define S3C_TINT_CSTAT_T4INTEN  (1<<4)
+#define S3C_TINT_CSTAT_T3INTEN  (1<<3)
+#define S3C_TINT_CSTAT_T2INTEN  (1<<2)
+#define S3C_TINT_CSTAT_T1INTEN  (1<<1)
+#define S3C_TINT_CSTAT_T0INTEN  (1<<0)
+
+#if defined(CONFIG_PLAT_S3C64XX) || defined(CONFIG_PLAT_S5PC1XX) 
+#define S3C_TCFG0       S3C_TIMERREG(0x00)
+#define S3C_TCFG1       S3C_TIMERREG(0x04)
+#define S3C_TCON        S3C_TIMERREG(0x08)
+#define S3C_TINT_CSTAT  S3C_TIMERREG(0x44)
+
+#define S3C_TCFG_PRESCALER0_MASK (255<<0)
+#define S3C_TCFG_PRESCALER1_MASK (255<<8)
+#define S3C_TCFG_PRESCALER1_SHIFT (8)
+#define S3C_TCFG_PRESCALER0_SHIFT (0)
+#define S3C_TCFG_DEADZONE_MASK   (255<<16)
+#define S3C_TCFG_DEADZONE_SHIFT  (16)
+
+#define S3C_TCFG1_MUX4_DIV1       (0<<16)
+#define S3C_TCFG1_MUX4_DIV2       (1<<16)
+#define S3C_TCFG1_MUX4_DIV4       (2<<16)
+#define S3C_TCFG1_MUX4_DIV8       (3<<16)
+#define S3C_TCFG1_MUX4_DIV16  (4<<16)
+#define S3C_TCFG1_MUX4_TCLK1  (5<<16)
+#define S3C_TCFG1_MUX4_MASK       (15<<16)
+
+#define S3C_TCFG1_MUX3_DIV1       (0<<12)
+#define S3C_TCFG1_MUX3_DIV2       (1<<12)
+#define S3C_TCFG1_MUX3_DIV4       (2<<12)
+#define S3C_TCFG1_MUX3_DIV8       (3<<12)
+#define S3C_TCFG1_MUX3_DIV16  (4<<12)
+#define S3C_TCFG1_MUX3_TCLK1  (5<<12)
+#define S3C_TCFG1_MUX3_MASK       (15<<12)
+
+#define S3C_TCFG1_MUX2_DIV1       (0<<8)
+#define S3C_TCFG1_MUX2_DIV2       (1<<8)
+#define S3C_TCFG1_MUX2_DIV4       (2<<8)
+#define S3C_TCFG1_MUX2_DIV8       (3<<8)
+#define S3C_TCFG1_MUX2_DIV16  (4<<8)
+#define S3C_TCFG1_MUX2_TCLK1  (5<<8)
+#define S3C_TCFG1_MUX2_MASK       (15<<8)
+
+#define S3C_TCFG1_MUX1_DIV1       (0<<4)
+#define S3C_TCFG1_MUX1_DIV2       (1<<4)
+#define S3C_TCFG1_MUX1_DIV4       (2<<4)
+#define S3C_TCFG1_MUX1_DIV8       (3<<4)
+#define S3C_TCFG1_MUX1_DIV16  (4<<4)
+#define S3C_TCFG1_MUX1_TCLK0  (5<<4)
+#define S3C_TCFG1_MUX1_MASK       (15<<4)
+
+#define S3C_TCFG1_MUX0_DIV1       (0<<0)
+#define S3C_TCFG1_MUX0_DIV2       (1<<0)
+#define S3C_TCFG1_MUX0_DIV4       (2<<0)
+#define S3C_TCFG1_MUX0_DIV8       (3<<0)
+#define S3C_TCFG1_MUX0_DIV16  (4<<0)
+#define S3C_TCFG1_MUX0_TCLK0  (5<<0)
+#define S3C_TCFG1_MUX0_MASK       (15<<0)
 
+/* for each timer, we have an count buffer, an compare buffer and
+ * an observation buffer
+ */
 
+/* WARNING - timer 4 has no buffer reg, and it's observation is at +4 */
+/* 32bit timer used */
+
+#define S3C_TCNTB(tmr)    S3C_TIMERREG2(tmr, 0x00)
+#define S3C_TCMPB(tmr)    S3C_TIMERREG2(tmr, 0x04)
+#define S3C_TCNTO(tmr)    S3C_TIMERREG2(tmr, (((tmr) == 4) ? 0x04 : 0x08))
+
+#define S3C_TCON_T4RELOAD         (1<<22)
+#define S3C_TCON_T4MANUALUPD  (1<<21)
+#define S3C_TCON_T4START          (1<<20)
+
+#define S3C_TCON_T3RELOAD         (1<<19)
+#define S3C_TCON_T3INVERT         (1<<18)
+#define S3C_TCON_T3MANUALUPD  (1<<17)
+#define S3C_TCON_T3START          (1<<16)
+
+#define S3C_TCON_T2RELOAD         (1<<15)
+#define S3C_TCON_T2INVERT         (1<<14)
+#define S3C_TCON_T2MANUALUPD  (1<<13)
+#define S3C_TCON_T2START          (1<<12)
+
+#define S3C_TCON_T1RELOAD         (1<<11)
+#define S3C_TCON_T1INVERT         (1<<10)
+#define S3C_TCON_T1MANUALUPD  (1<<9)
+#define S3C_TCON_T1START          (1<<8)
+
+#define S3C_TCON_T0DEADZONE       (1<<4)
+#define S3C_TCON_T0RELOAD         (1<<3)
+#define S3C_TCON_T0INVERT         (1<<2)
+#define S3C_TCON_T0MANUALUPD  (1<<1)
+#define S3C_TCON_T0START          (1<<0)
+#endif /*  defined(CONFIG_PLAT_S3C64XX) || defined(CONFIG_PLAT_S5PC1XX) */
+
+#endif /*  __ASM_ARCH_REGS_TIMER_H */
 
diff -ur linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-usb-hsotg-phy.h fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-usb-hsotg-phy.h
--- linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-usb-hsotg-phy.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/arch/arm/plat-samsung/include/plat/regs-usb-hsotg-phy.h	2011-03-18 10:01:49.000000000 +0100
@@ -27,7 +27,7 @@
 #define S3C_PHYPWR				S3C_HSOTG_PHYREG(0x00)
 #define SRC_PHYPWR_OTG_DISABLE			(1 << 4)
 #define SRC_PHYPWR_ANALOG_POWERDOWN		(1 << 3)
-#define SRC_PHYPWR_FORCE_SUSPEND		(1 << 1)
+#define SRC_PHYPWR_FORCE_SUSPEND		(1 << 0)
 
 #define S3C_PHYCLK				S3C_HSOTG_PHYREG(0x04)
 #define S3C_PHYCLK_MODE_USB11			(1 << 6)
Only in fa-linux-2.6.38/arch/arm/plat-samsung: setup-fimc0.c
Only in fa-linux-2.6.38/arch/arm/plat-samsung: setup-fimc1.c
Only in linux-2.6.38/arch/microblaze/boot: dts
Only in fa-linux-2.6.38/: build
Only in fa-linux-2.6.38/: config_linux_mini6410
diff -ur linux-2.6.38/drivers/char/Kconfig fa-linux-2.6.38/drivers/char/Kconfig
--- linux-2.6.38/drivers/char/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/char/Kconfig	2011-03-18 10:02:10.000000000 +0100
@@ -97,6 +97,41 @@
 	  kind of kernel debugging operations.
 	  When in doubt, say "N".
 
+config MINI6410_LEDS
+	tristate "LED Support for Mini6410 GPIO LEDs"
+	depends on CPU_S3C6410
+	default y
+	help
+	  This option enables support for LEDs connected to GPIO lines
+	  on Mini6410 boards.
+
+config MINI6410_HELLO_MODULE
+	tristate "Mini6410 module sample"
+	depends on CPU_S3C6410
+	help
+	  Mini6410 module sample.
+
+config MINI6410_BUTTONS
+	tristate "Buttons driver for FriendlyARM Mini6410 development boards"
+	depends on CPU_S3C6410
+	default y
+	help
+	  this is buttons driver for FriendlyARM Mini6410 development boards
+
+config MINI6410_BUZZER
+	tristate "Buzzer driver for FriendlyARM Mini6410 development boards"
+	depends on CPU_S3C6410
+	default y
+	help
+	  this is buzzer driver for FriendlyARM Mini6410 development boards
+
+config MINI6410_ADC
+	bool "ADC driver for FriendlyARM Mini6410 development boards"
+	depends on MACH_MINI6410
+	default y if MACH_MINI6410
+	help
+	  this is ADC driver for FriendlyARM Mini6410 development boards
+
 config BFIN_JTAG_COMM
 	tristate "Blackfin JTAG Communication"
 	depends on BLACKFIN
diff -ur linux-2.6.38/drivers/char/Makefile fa-linux-2.6.38/drivers/char/Makefile
--- linux-2.6.38/drivers/char/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/char/Makefile	2011-03-18 10:02:10.000000000 +0100
@@ -86,3 +86,10 @@
 
 obj-$(CONFIG_JS_RTC)		+= js-rtc.o
 js-rtc-y = rtc.o
+
+obj-$(CONFIG_MINI6410_LEDS)	+= mini6410_leds.o
+obj-$(CONFIG_MINI6410_HELLO_MODULE)	+= mini6410_hello_module.o
+obj-$(CONFIG_MINI6410_BUTTONS)	+= mini6410_buttons.o
+obj-$(CONFIG_MINI6410_BUZZER)	+= mini6410_pwm.o
+obj-$(CONFIG_MINI6410_ADC)		+= mini6410_adc.o
+
Only in fa-linux-2.6.38/drivers/char: mini6410_adc.c
Only in fa-linux-2.6.38/drivers/char: mini6410_buttons.c
Only in fa-linux-2.6.38/drivers/char: mini6410_hello_module.c
Only in fa-linux-2.6.38/drivers/char: mini6410_leds.c
Only in fa-linux-2.6.38/drivers/char: mini6410_pwm.c
diff -ur linux-2.6.38/drivers/input/touchscreen/Kconfig fa-linux-2.6.38/drivers/input/touchscreen/Kconfig
--- linux-2.6.38/drivers/input/touchscreen/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/input/touchscreen/Kconfig	2011-07-18 06:03:08.000000000 +0200
@@ -190,6 +190,35 @@
 	  To compile this driver as a module, choose M here: the
 	  module will be called s3c2410_ts.
 
+config TOUCHSCREEN_MINI6410
+	tristate "S3C touchscreen driver for Mini6410"
+	depends on ARCH_S3C2410 || ARCH_S3C64XX || ARCH_S5P64XX || ARCH_S5PC1XX
+	default y
+	help
+	  Say Y here to enable the driver for the touchscreen on the
+	  FriendlyARM Mini6410 development board.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called mini6410-ts.
+
+config TOUCHSCREEN_1WIRE
+	tristate "Mini6410 1-Wire host and Touch Screen Driver"
+	depends on MACH_MINI6410
+	help
+	  Say Y here to enable the 1-Wire host and Touch Screen driver for
+	  FriendlyARM Mini6410 development board.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called mini6410_1wire_host.
+
+config TOUCHSCREEN_IF
+	bool
+	default y if TOUCHSCREEN_1WIRE
+
 config TOUCHSCREEN_GUNZE
 	tristate "Gunze AHL-51S touchscreen"
 	select SERIO
diff -ur linux-2.6.38/drivers/input/touchscreen/Makefile fa-linux-2.6.38/drivers/input/touchscreen/Makefile
--- linux-2.6.38/drivers/input/touchscreen/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/input/touchscreen/Makefile	2011-07-18 06:03:08.000000000 +0200
@@ -57,3 +57,6 @@
 obj-$(CONFIG_TOUCHSCREEN_WM97XX_ZYLONITE)	+= zylonite-wm97xx.o
 obj-$(CONFIG_TOUCHSCREEN_W90X900)	+= w90p910_ts.o
 obj-$(CONFIG_TOUCHSCREEN_TPS6507X)	+= tps6507x-ts.o
+obj-$(CONFIG_TOUCHSCREEN_MINI6410)	+= mini6410-ts.o
+obj-$(CONFIG_TOUCHSCREEN_1WIRE)		+= mini6410_1wire_host.o
+obj-$(CONFIG_TOUCHSCREEN_IF)		+= ts-if.o
Only in fa-linux-2.6.38/drivers/input/touchscreen: mini6410-ts.c
Only in fa-linux-2.6.38/drivers/input/touchscreen: mini6410_1wire_host.c
Only in fa-linux-2.6.38/drivers/input/touchscreen: ts-if.c
diff -ur linux-2.6.38/drivers/media/video/Kconfig fa-linux-2.6.38/drivers/media/video/Kconfig
--- linux-2.6.38/drivers/media/video/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/media/video/Kconfig	2011-03-18 10:02:16.000000000 +0100
@@ -950,6 +950,9 @@
 	  This driver can be compiled as a module, called s2255drv.
 
 endif # V4L_USB_DRIVERS
+
+source "drivers/media/video/samsung/Kconfig"
+
 endif # VIDEO_CAPTURE_DRIVERS
 
 menuconfig V4L_MEM2MEM_DRIVERS
diff -ur linux-2.6.38/drivers/media/video/Makefile fa-linux-2.6.38/drivers/media/video/Makefile
--- linux-2.6.38/drivers/media/video/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/media/video/Makefile	2011-03-18 10:02:17.000000000 +0100
@@ -155,6 +155,7 @@
 obj-$(CONFIG_VIDEO_SH_MOBILE_CEU)	+= sh_mobile_ceu_camera.o
 obj-$(CONFIG_VIDEO_OMAP1)		+= omap1_camera.o
 obj-$(CONFIG_VIDEO_SAMSUNG_S5P_FIMC) 	+= s5p-fimc/
+obj-$(CONFIG_VIDEO_SAMSUNG)		+= samsung/
 
 obj-$(CONFIG_ARCH_DAVINCI)		+= davinci/
 
Only in fa-linux-2.6.38/drivers/media/video: samsung

diff -ur linux-2.6.38/drivers/net/dm9000.c fa-linux-2.6.38/drivers/net/dm9000.c
--- linux-2.6.38/drivers/net/dm9000.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/net/dm9000.c	2011-03-18 10:02:11.000000000 +0100
@@ -1580,19 +1580,24 @@
 	for (i = 0; i < 6; i += 2)
 		dm9000_read_eeprom(db, i / 2, ndev->dev_addr+i);
 
+	/* try MAC address passed by kernel command line */
 	if (!is_valid_ether_addr(ndev->dev_addr) && pdata != NULL) {
-		mac_src = "platform data";
-		memcpy(ndev->dev_addr, pdata->dev_addr, 6);
+		mac_src = "param data";
+		memcpy(ndev->dev_addr, pdata->param_addr, 6);
 	}
 
 	if (!is_valid_ether_addr(ndev->dev_addr)) {
 		/* try reading from mac */
-		
 		mac_src = "chip";
 		for (i = 0; i < 6; i++)
 			ndev->dev_addr[i] = ior(db, i+DM9000_PAR);
 	}
 
+	if (!is_valid_ether_addr(ndev->dev_addr) && pdata != NULL) {
+		mac_src = "platform data";
+		memcpy(ndev->dev_addr, pdata->dev_addr, 6);
+	}
+
 	if (!is_valid_ether_addr(ndev->dev_addr))
 		dev_warn(db->dev, "%s: Invalid ethernet MAC address. Please "
 			 "set using ifconfig\n", ndev->name);
diff -ur linux-2.6.38/drivers/net/wireless/ath/ath9k/hif_usb.c fa-linux-2.6.38/drivers/net/wireless/ath/ath9k/hif_usb.c
--- linux-2.6.38/drivers/net/wireless/ath/ath9k/hif_usb.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/net/wireless/ath/ath9k/hif_usb.c	2011-03-18 10:02:14.000000000 +0100
@@ -901,6 +901,22 @@
 	 */
 	for (idx = 0; idx < alt->desc.bNumEndpoints; idx++) {
 		endp = &alt->endpoint[idx].desc;
+		if (((endp->bEndpointAddress & USB_ENDPOINT_NUMBER_MASK)
+					== 0x04) &&
+				((endp->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
+				 == USB_ENDPOINT_XFER_INT)) {
+			endp->bmAttributes &= ~USB_ENDPOINT_XFERTYPE_MASK;
+			endp->bmAttributes |= USB_ENDPOINT_XFER_BULK;
+			endp->bInterval = 0;
+		}
+	}
+
+	/* On downloading the firmware to the target, the USB descriptor of EP4
+	 * is 'patched' to change the type of the endpoint to Bulk. This will
+	 * bring down CPU usage during the scan period.
+	 */
+	for (idx = 0; idx < alt->desc.bNumEndpoints; idx++) {
+		endp = &alt->endpoint[idx].desc;
 		if ((endp->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)
 				== USB_ENDPOINT_XFER_INT) {
 			endp->bmAttributes &= ~USB_ENDPOINT_XFERTYPE_MASK;
diff -ur linux-2.6.38/drivers/usb/Makefile fa-linux-2.6.38/drivers/usb/Makefile
--- linux-2.6.38/drivers/usb/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/usb/Makefile	2011-03-18 10:02:05.000000000 +0100
@@ -23,6 +23,8 @@
 obj-$(CONFIG_USB_ISP1760_HCD)	+= host/
 obj-$(CONFIG_USB_IMX21_HCD)	+= host/
 
+obj-$(CONFIG_USB_SERIAL)	+= serial/
+
 obj-$(CONFIG_USB_C67X00_HCD)	+= c67x00/
 
 obj-$(CONFIG_USB_WUSB)		+= wusbcore/
@@ -38,8 +40,6 @@
 obj-$(CONFIG_USB_MDC800)	+= image/
 obj-$(CONFIG_USB_MICROTEK)	+= image/
 
-obj-$(CONFIG_USB_SERIAL)	+= serial/
-
 obj-$(CONFIG_USB)		+= misc/
 obj-$(CONFIG_EARLY_PRINTK_DBGP)	+= early/
 
diff -ur linux-2.6.38/drivers/usb/host/ohci-s3c2410.c fa-linux-2.6.38/drivers/usb/host/ohci-s3c2410.c
--- linux-2.6.38/drivers/usb/host/ohci-s3c2410.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/usb/host/ohci-s3c2410.c	2011-03-18 10:02:05.000000000 +0100
@@ -25,10 +25,14 @@
 
 #define valid_port(idx) ((idx) == 1 || (idx) == 2)
 
+#ifdef CONFIG_MACH_MINI6410
+extern void s3c_otg_phy_config(int enable);
+#endif
+
 /* clock device associated with the hcd */
 
 static struct clk *clk;
-static struct clk *usb_clk;
+static struct clk *otg_clk, *usb_clk;
 
 /* forward definitions */
 
@@ -47,6 +51,11 @@
 
 	dev_dbg(&dev->dev, "s3c2410_start_hc:\n");
 
+	clk_enable(otg_clk);
+#ifdef CONFIG_MACH_MINI6410
+	s3c_otg_phy_config(1);
+#endif
+
 	clk_enable(usb_clk);
 	mdelay(2);			/* let the bus clock stabilise */
 
@@ -79,6 +88,7 @@
 
 	clk_disable(clk);
 	clk_disable(usb_clk);
+	clk_disable(otg_clk);
 }
 
 /* ohci_s3c2410_hub_status_data
@@ -375,6 +385,13 @@
 		goto err_clk;
 	}
 
+	otg_clk = clk_get(&dev->dev, "otg");
+	if (IS_ERR(otg_clk)) {
+		dev_err(&dev->dev, "cannot get otg clock\n");
+		retval = -ENOENT;
+		goto err_otg;
+	}
+
 	s3c2410_start_hc(dev, hcd);
 
 	hcd->regs = ioremap(hcd->rsrc_start, hcd->rsrc_len);
@@ -395,6 +412,10 @@
  err_ioremap:
 	s3c2410_stop_hc(dev);
 	iounmap(hcd->regs);
+
+	clk_put(otg_clk);
+
+ err_otg:
 	clk_put(usb_clk);
 
  err_clk:
Only in fa-linux-2.6.38/drivers/usb/serial: 3g_devices.c
diff -ur linux-2.6.38/drivers/usb/serial/Makefile fa-linux-2.6.38/drivers/usb/serial/Makefile
--- linux-2.6.38/drivers/usb/serial/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/usb/serial/Makefile	2011-11-01 12:49:42.000000000 +0100
@@ -11,6 +11,8 @@
 usbserial-$(CONFIG_USB_SERIAL_CONSOLE)	+= console.o
 usbserial-$(CONFIG_USB_EZUSB)		+= ezusb.o
 
+obj-$(CONFIG_USB_SERIAL_OPTION)			+= option.o
+obj-$(CONFIG_USB_SERIAL_WWAN)			+= usb_wwan.o
 obj-$(CONFIG_USB_SERIAL_AIRCABLE)		+= aircable.o
 obj-$(CONFIG_USB_SERIAL_ARK3116)		+= ark3116.o
 obj-$(CONFIG_USB_SERIAL_BELKIN)			+= belkin_sa.o
@@ -42,7 +44,6 @@
 obj-$(CONFIG_USB_SERIAL_NAVMAN)			+= navman.o
 obj-$(CONFIG_USB_SERIAL_OMNINET)		+= omninet.o
 obj-$(CONFIG_USB_SERIAL_OPTICON)		+= opticon.o
-obj-$(CONFIG_USB_SERIAL_OPTION)			+= option.o
 obj-$(CONFIG_USB_SERIAL_OTI6858)		+= oti6858.o
 obj-$(CONFIG_USB_SERIAL_PL2303)			+= pl2303.o
 obj-$(CONFIG_USB_SERIAL_QCAUX)			+= qcaux.o
@@ -54,7 +55,6 @@
 obj-$(CONFIG_USB_SERIAL_SPCP8X5)		+= spcp8x5.o
 obj-$(CONFIG_USB_SERIAL_SSU100)			+= ssu100.o
 obj-$(CONFIG_USB_SERIAL_SYMBOL)			+= symbolserial.o
-obj-$(CONFIG_USB_SERIAL_WWAN)			+= usb_wwan.o
 obj-$(CONFIG_USB_SERIAL_TI)			+= ti_usb_3410_5052.o
 obj-$(CONFIG_USB_SERIAL_VISOR)			+= visor.o
 obj-$(CONFIG_USB_SERIAL_WHITEHEAT)		+= whiteheat.o
diff -ur linux-2.6.38/drivers/usb/serial/option.c fa-linux-2.6.38/drivers/usb/serial/option.c
--- linux-2.6.38/drivers/usb/serial/option.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/usb/serial/option.c	2012-08-23 08:52:37.000000000 +0200
@@ -149,6 +149,7 @@
 #define HUAWEI_PRODUCT_K3765			0x1465
 #define HUAWEI_PRODUCT_E14AC			0x14AC
 #define HUAWEI_PRODUCT_ETS1220			0x1803
+#define HUAWEI_PRODUCT_E353			0x1506
 
 #define QUANTA_VENDOR_ID			0x0408
 #define QUANTA_PRODUCT_Q101			0xEA02
@@ -310,9 +311,15 @@
 #define ZTE_PRODUCT_AC2726			0xfff5
 #define ZTE_PRODUCT_AC8710T			0xffff
 
-/* ZTE PRODUCTS -- alternate vendor ID */
-#define ZTE_VENDOR_ID2				0x1d6b
-#define ZTE_PRODUCT_MF_330			0x0002
+/* for PCIe 3G */
+#define ZTE_PRODUCT_MC2700   0xffed
+#define ZTE_PRODUCT_AD3812V2  0xffeb
+#define ZTE_PRODUCT_M305    0x1303
+/* LONGUNG T5300 */
+#define LONGUNG_VENDOR_ID               0x04cc
+#define LONGUNG_PRODUCT_T5300           0x2263
+/* LONGGHEER  C5300 */
+#define FOUR_G_SYSTEMS_PRODUCT_W14_C5300 0x9e00
 
 #define BENQ_VENDOR_ID				0x04a5
 #define BENQ_PRODUCT_H10			0x4068
@@ -339,11 +346,12 @@
 #define TOSHIBA_PRODUCT_G450			0x0d45
 
 #define ALINK_VENDOR_ID				0x1e0e
+#define ALINK_PRODUCT_PH300			0x9100
 #define ALINK_PRODUCT_3GU			0x9200
 
 /* ALCATEL PRODUCTS */
 #define ALCATEL_VENDOR_ID			0x1bbb
-#define ALCATEL_PRODUCT_X060S			0x0000
+#define ALCATEL_PRODUCT_X060S_X200		0x0000
 
 #define PIRELLI_VENDOR_ID			0x1266
 #define PIRELLI_PRODUCT_C100_1			0x1002
@@ -378,6 +386,9 @@
  * It seems to contain a Qualcomm QSC6240/6290 chipset            */
 #define FOUR_G_SYSTEMS_PRODUCT_W14		0x9603
 
+/* Zoom */
+#define ZOOM_PRODUCT_4597			0x9607
+
 /* Haier products */
 #define HAIER_VENDOR_ID				0x201e
 #define HAIER_PRODUCT_CE100			0x2009
@@ -407,6 +418,10 @@
 /* ONDA MT825UP HSDPA 14.2 modem */
 #define ONDA_MT825UP         0x000b
 
+/* Samsung products */
+#define SAMSUNG_VENDOR_ID                       0x04e8
+#define SAMSUNG_PRODUCT_GT_B3730                0x6889
+
 /* some devices interfaces need special handling due to a number of reasons */
 enum option_blacklist_reason {
 		OPTION_BLACKLIST_NONE = 0,
@@ -427,6 +442,20 @@
 	.reason = OPTION_BLACKLIST_SENDSETUP
 };
 
+static const u8 alcatel_x200_no_sendsetup[] = { 0, 1 };
+static const struct option_blacklist_info alcatel_x200_blacklist = {
+	.infolen = ARRAY_SIZE(alcatel_x200_no_sendsetup),
+	.ifaceinfo = alcatel_x200_no_sendsetup,
+	.reason = OPTION_BLACKLIST_SENDSETUP
+};
+
+static const u8 zte_k3765_z_no_sendsetup[] = { 0, 1, 2 };
+static const struct option_blacklist_info zte_k3765_z_blacklist = {
+	.infolen = ARRAY_SIZE(zte_k3765_z_no_sendsetup),
+	.ifaceinfo = zte_k3765_z_no_sendsetup,
+	.reason = OPTION_BLACKLIST_SENDSETUP
+};
+
 static const struct usb_device_id option_ids[] = {
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_COLT) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_RICOLA) },
@@ -528,6 +557,7 @@
 	{ USB_DEVICE_AND_INTERFACE_INFO(HUAWEI_VENDOR_ID, HUAWEI_PRODUCT_K3765, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(HUAWEI_VENDOR_ID, HUAWEI_PRODUCT_ETS1220, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(HUAWEI_VENDOR_ID, HUAWEI_PRODUCT_E14AC, 0xff, 0xff, 0xff) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(HUAWEI_VENDOR_ID, HUAWEI_PRODUCT_E353, 0xff, 0x01, 0x01) },
 	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_V640) },
 	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_V620) },
 	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_V740) },
@@ -652,7 +682,8 @@
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0028, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0029, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0030, 0xff, 0xff, 0xff) },
-	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_MF626, 0xff, 0xff, 0xff) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_MF626, 0xff,
+	  0xff, 0xff), .driver_info = (kernel_ulong_t)&four_g_w14_blacklist },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0032, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0033, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0034, 0xff, 0xff, 0xff) },
@@ -909,13 +940,24 @@
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0073, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0130, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x0141, 0xff, 0xff, 0xff) },
-	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x2002, 0xff, 0xff, 0xff) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x2002, 0xff,
+	  0xff, 0xff), .driver_info = (kernel_ulong_t)&zte_k3765_z_blacklist },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, 0x2003, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_CDMA_TECH, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_AC8710, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_AC2726, 0xff, 0xff, 0xff) },
-	{ USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_AC8710T, 0xff, 0xff, 0xff) },
-	{ USB_DEVICE(ZTE_VENDOR_ID2, ZTE_PRODUCT_MF_330) },
+    { USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_AC8710T, 0xff, 0xff, 0xff) },
+
+    { USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_MC2700, 0xff, 0xff, 0xff) },
+    { USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_AD3812V2, 0xff, 0xff, 0xff) },
+    { USB_DEVICE_AND_INTERFACE_INFO(ZTE_VENDOR_ID, ZTE_PRODUCT_M305, 0xff, 0xff, 0xff) },
+    { USB_DEVICE(LONGUNG_VENDOR_ID, LONGUNG_PRODUCT_T5300),
+        .driver_info = (kernel_ulong_t)&four_g_w14_blacklist
+    },
+    { USB_DEVICE(LONGCHEER_VENDOR_ID, FOUR_G_SYSTEMS_PRODUCT_W14_C5300),
+        .driver_info = (kernel_ulong_t)&four_g_w14_blacklist
+    },
+
 	{ USB_DEVICE(BENQ_VENDOR_ID, BENQ_PRODUCT_H10) },
 	{ USB_DEVICE(DLINK_VENDOR_ID, DLINK_PRODUCT_DWM_652) },
 	{ USB_DEVICE(ALINK_VENDOR_ID, DLINK_PRODUCT_DWM_652_U5) }, /* Yes, ALINK_VENDOR_ID */
@@ -928,13 +970,17 @@
 	{ USB_DEVICE(TOSHIBA_VENDOR_ID, TOSHIBA_PRODUCT_G450) },
 	{ USB_DEVICE(TOSHIBA_VENDOR_ID, TOSHIBA_PRODUCT_HSDPA_MINICARD ) }, /* Toshiba 3G HSDPA == Novatel Expedite EU870D MiniCard */
 	{ USB_DEVICE(ALINK_VENDOR_ID, 0x9000) },
+	{ USB_DEVICE(ALINK_VENDOR_ID, ALINK_PRODUCT_PH300) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(ALINK_VENDOR_ID, ALINK_PRODUCT_3GU, 0xff, 0xff, 0xff) },
-	{ USB_DEVICE(ALCATEL_VENDOR_ID, ALCATEL_PRODUCT_X060S) },
+	{ USB_DEVICE(ALCATEL_VENDOR_ID, ALCATEL_PRODUCT_X060S_X200),
+	  .driver_info = (kernel_ulong_t)&alcatel_x200_blacklist
+	},
 	{ USB_DEVICE(AIRPLUS_VENDOR_ID, AIRPLUS_PRODUCT_MCD650) },
 	{ USB_DEVICE(TLAYTECH_VENDOR_ID, TLAYTECH_PRODUCT_TEU800) },
 	{ USB_DEVICE(LONGCHEER_VENDOR_ID, FOUR_G_SYSTEMS_PRODUCT_W14),
   	  .driver_info = (kernel_ulong_t)&four_g_w14_blacklist
   	},
+	{ USB_DEVICE(LONGCHEER_VENDOR_ID, ZOOM_PRODUCT_4597) },
 	{ USB_DEVICE(HAIER_VENDOR_ID, HAIER_PRODUCT_CE100) },
 	/* Pirelli  */
 	{ USB_DEVICE(PIRELLI_VENDOR_ID, PIRELLI_PRODUCT_C100_1)},
@@ -967,6 +1013,8 @@
 	{ USB_DEVICE(OLIVETTI_VENDOR_ID, OLIVETTI_PRODUCT_OLICARD100) },
 	{ USB_DEVICE(CELOT_VENDOR_ID, CELOT_PRODUCT_CT680M) }, /* CT-650 CDMA 450 1xEVDO modem */
 	{ USB_DEVICE(ONDA_VENDOR_ID, ONDA_MT825UP) }, /* ONDA MT825UP modem */
+	{ USB_DEVICE_AND_INTERFACE_INFO(SAMSUNG_VENDOR_ID, SAMSUNG_PRODUCT_GT_B3730, USB_CLASS_CDC_DATA, 0x00, 0x00) }, /* Samsung GT-B3730 LTE USB modem.*/
+#include "3g_devices.c"
 	{ } /* Terminating entry */
 };
 MODULE_DEVICE_TABLE(usb, option_ids);
@@ -1103,6 +1151,12 @@
 		serial->interface->cur_altsetting->desc.bInterfaceNumber == 1)
 		return -ENODEV;
 
+	/* Don't bind network interface on Samsung GT-B3730, it is handled by a separate module */
+	if (serial->dev->descriptor.idVendor == SAMSUNG_VENDOR_ID &&
+		serial->dev->descriptor.idProduct == SAMSUNG_PRODUCT_GT_B3730 &&
+		serial->interface->cur_altsetting->desc.bInterfaceClass != USB_CLASS_CDC_DATA)
+		return -ENODEV;
+
 	data = serial->private = kzalloc(sizeof(struct usb_wwan_intf_private), GFP_KERNEL);
 
 	if (!data)
diff -ur linux-2.6.38/drivers/usb/serial/usb_wwan.c fa-linux-2.6.38/drivers/usb/serial/usb_wwan.c
--- linux-2.6.38/drivers/usb/serial/usb_wwan.c	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/usb/serial/usb_wwan.c	2011-11-01 12:49:42.000000000 +0100
@@ -261,7 +261,8 @@
 				intfdata->in_flight--;
 				spin_unlock_irqrestore(&intfdata->susp_lock,
 						       flags);
-				continue;
+				usb_autopm_put_interface_async(port->serial->interface);
+				break;
 			}
 		}
 
@@ -308,11 +309,16 @@
 		/* Resubmit urb so we continue receiving */
 		if (status != -ESHUTDOWN) {
 			err = usb_submit_urb(urb, GFP_ATOMIC);
-			if (err && err != -EPERM)
-				printk(KERN_ERR "%s: resubmit read urb failed. "
-				       "(%d)", __func__, err);
-			else
+			if (err) {
+				if (err != -EPERM) {
+					printk(KERN_ERR "%s: resubmit read urb failed. "
+						"(%d)", __func__, err);
+					/* busy also in error unless we are killed */
+					usb_mark_last_busy(port->serial->dev);
+				}
+			} else {
 				usb_mark_last_busy(port->serial->dev);
+			}
 		}
 
 	}
@@ -421,6 +427,7 @@
 	spin_lock_irq(&intfdata->susp_lock);
 	portdata->opened = 1;
 	spin_unlock_irq(&intfdata->susp_lock);
+	/* this balances a get in the generic USB serial code */
 	usb_autopm_put_interface(serial->interface);
 
 	return 0;
@@ -447,7 +454,8 @@
 			usb_kill_urb(portdata->in_urbs[i]);
 		for (i = 0; i < N_OUT_URB; i++)
 			usb_kill_urb(portdata->out_urbs[i]);
-		usb_autopm_get_interface(serial->interface);
+		/* balancing - important as an error cannot be handled*/
+		usb_autopm_get_interface_no_resume(serial->interface);
 		serial->interface->needs_remote_wakeup = 0;
 	}
 }
@@ -661,6 +669,18 @@
 }
 EXPORT_SYMBOL(usb_wwan_suspend);
 
+static void unbusy_queued_urb(struct urb *urb, struct usb_wwan_port_private *portdata)
+{
+	int i;
+
+	for (i = 0; i < N_OUT_URB; i++) {
+		if (urb == portdata->out_urbs[i]) {
+			clear_bit(i, &portdata->out_busy);
+			break;
+		}
+	}
+}
+
 static void play_delayed(struct usb_serial_port *port)
 {
 	struct usb_wwan_intf_private *data;
@@ -672,8 +692,16 @@
 	data = port->serial->private;
 	while ((urb = usb_get_from_anchor(&portdata->delayed))) {
 		err = usb_submit_urb(urb, GFP_ATOMIC);
-		if (!err)
+		if (!err) {
 			data->in_flight++;
+		} else {
+			/* we have to throw away the rest */
+			do {
+				unbusy_queued_urb(urb, portdata);
+				usb_autopm_put_interface_no_suspend(port->serial->interface);
+			} while ((urb = usb_get_from_anchor(&portdata->delayed)));
+			break;
+		}
 	}
 }
 
diff -ur linux-2.6.38/drivers/video/Kconfig fa-linux-2.6.38/drivers/video/Kconfig
--- linux-2.6.38/drivers/video/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/video/Kconfig	2011-03-18 10:02:18.000000000 +0100
@@ -2065,6 +2065,15 @@
        ---help---
          Show all register writes via printk(KERN_DEBUG)
 
+source "drivers/video/samsung/Kconfig"
+
+config BACKLIGHT_FRIENDLY_ARM
+	tristate "Backlight support for FriendlyARM board"
+	depends on FB && ARCH_S3C64XX
+	default y
+	help
+	  backlight driver for FriendlyARM board
+
 config FB_S3C2410
 	tristate "S3C2410 LCD framebuffer support"
 	depends on FB && ARCH_S3C2410
diff -ur linux-2.6.38/drivers/video/Makefile fa-linux-2.6.38/drivers/video/Makefile
--- linux-2.6.38/drivers/video/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/drivers/video/Makefile	2011-03-18 10:02:18.000000000 +0100
@@ -118,6 +118,7 @@
 obj-$(CONFIG_FB_SH7760)		  += sh7760fb.o
 obj-$(CONFIG_FB_IMX)              += imxfb.o
 obj-$(CONFIG_FB_S3C)		  += s3c-fb.o
+obj-$(CONFIG_FB_S3C_EXT)	  += samsung/
 obj-$(CONFIG_FB_S3C2410)	  += s3c2410fb.o
 obj-$(CONFIG_FB_FSL_DIU)	  += fsl-diu-fb.o
 obj-$(CONFIG_FB_COBALT)           += cobalt_lcdfb.o
@@ -159,3 +160,6 @@
 
 #video output switch sysfs driver
 obj-$(CONFIG_VIDEO_OUTPUT_CONTROL) += output.o
+
+# FriendlyARM support
+obj-$(CONFIG_BACKLIGHT_FRIENDLY_ARM) += mini6410_backlight.o
Only in fa-linux-2.6.38/drivers/video: mini6410_backlight.c
Only in fa-linux-2.6.38/drivers/video: samsung
diff -ur linux-2.6.38/fs/Kconfig fa-linux-2.6.38/fs/Kconfig
--- linux-2.6.38/fs/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/fs/Kconfig	2011-03-18 10:01:58.000000000 +0100
@@ -175,6 +175,8 @@
 source "fs/befs/Kconfig"
 source "fs/bfs/Kconfig"
 source "fs/efs/Kconfig"
+
+source "fs/yaffs2/Kconfig"
 source "fs/jffs2/Kconfig"
 # UBIFS File system configuration
 source "fs/ubifs/Kconfig"
diff -ur linux-2.6.38/fs/Makefile fa-linux-2.6.38/fs/Makefile
--- linux-2.6.38/fs/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/fs/Makefile	2011-03-18 10:01:58.000000000 +0100
@@ -121,3 +121,5 @@
 obj-$(CONFIG_GFS2_FS)           += gfs2/
 obj-$(CONFIG_EXOFS_FS)          += exofs/
 obj-$(CONFIG_CEPH_FS)		+= ceph/
+
+obj-$(CONFIG_YAFFS_FS)		+= yaffs2/
Only in fa-linux-2.6.38/fs: yaffs2
diff -ur linux-2.6.38/include/linux/dm9000.h fa-linux-2.6.38/include/linux/dm9000.h
--- linux-2.6.38/include/linux/dm9000.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/include/linux/dm9000.h	2011-03-18 10:01:57.000000000 +0100
@@ -28,6 +28,7 @@
 struct dm9000_plat_data {
 	unsigned int	flags;
 	unsigned char	dev_addr[6];
+	unsigned char	param_addr[6];
 
 	/* allow replacement IO routines */
diff -ur linux-2.6.38/include/media/v4l2-dev.h fa-linux-2.6.38/include/media/v4l2-dev.h
--- linux-2.6.38/include/media/v4l2-dev.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/include/media/v4l2-dev.h	2011-03-18 10:01:58.000000000 +0100
@@ -79,6 +79,12 @@
 	/* attribute to differentiate multiple indices on one physical device */
 	int index;
 
+#ifdef CONFIG_VIDEO_SAMSUNG
+	/* added for TV */
+	int type2;
+	int users;
+#endif
+
 	/* V4L2 file handles */
 	spinlock_t		fh_lock; /* Lock for all v4l2_fhs */
 	struct list_head	fh_list; /* List of struct v4l2_fh */
diff -ur linux-2.6.38/include/mtd/mtd-abi.h fa-linux-2.6.38/include/mtd/mtd-abi.h
--- linux-2.6.38/include/mtd/mtd-abi.h	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/include/mtd/mtd-abi.h	2011-03-18 10:01:57.000000000 +0100
@@ -145,7 +145,7 @@
 };
 
 #define MTD_MAX_OOBFREE_ENTRIES	8
-#define MTD_MAX_ECCPOS_ENTRIES	64
+#define MTD_MAX_ECCPOS_ENTRIES	256
 /*
  * OBSOLETE: ECC layout control structure. Exported to user-space via ioctl
  * ECCGETLAYOUT for backwards compatbility and should not be mistaken as a
Only in fa-linux-2.6.38/scripts: FriendlyARM.cpio
diff -ur linux-2.6.38/sound/soc/samsung/Kconfig fa-linux-2.6.38/sound/soc/samsung/Kconfig
--- linux-2.6.38/sound/soc/samsung/Kconfig	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/sound/soc/samsung/Kconfig	2011-03-18 10:01:56.000000000 +0100
@@ -148,6 +148,15 @@
 	help
 	  Sat Y if you want to add support for SoC audio on the SMDK.
 
+config SND_SOC_MINI6410_WM9713
+	tristate "SoC AC97 Audio support for Mini6410 with WM9713"
+	depends on SND_SOC_SAMSUNG && MACH_MINI6410
+	select SND_SOC_WM9713
+	select SND_SAMSUNG_AC97
+	help
+	  Say Y if you want to add support for SoC audio on the FriendlyARM
+	  Mini6410 board.
+
 config SND_SOC_SMARTQ
 	tristate "SoC I2S Audio support for SmartQ board"
 	depends on SND_SOC_SAMSUNG && MACH_SMARTQ
diff -ur linux-2.6.38/sound/soc/samsung/Makefile fa-linux-2.6.38/sound/soc/samsung/Makefile
--- linux-2.6.38/sound/soc/samsung/Makefile	2011-03-15 02:20:32.000000000 +0100
+++ fa-linux-2.6.38/sound/soc/samsung/Makefile	2011-03-18 10:01:56.000000000 +0100
@@ -32,6 +32,7 @@
 snd-soc-smdk-wm8580-objs := smdk_wm8580.o
 snd-soc-smdk-wm8994-objs := smdk_wm8994.o
 snd-soc-smdk-wm9713-objs := smdk_wm9713.o
+snd-soc-mini6410-wm9713-objs := mini6410_wm9713.o
 snd-soc-s3c64xx-smartq-wm8987-objs := smartq_wm8987.o
 snd-soc-goni-wm8994-objs := goni_wm8994.o
 snd-soc-smdk-spdif-objs := smdk_spdif.o
@@ -50,6 +51,7 @@
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM8580) += snd-soc-smdk-wm8580.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM8994) += snd-soc-smdk-wm8994.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_WM9713) += snd-soc-smdk-wm9713.o
+obj-$(CONFIG_SND_SOC_MINI6410_WM9713) += snd-soc-mini6410-wm9713.o
 obj-$(CONFIG_SND_SOC_SMARTQ) += snd-soc-s3c64xx-smartq-wm8987.o
 obj-$(CONFIG_SND_SOC_SAMSUNG_SMDK_SPDIF) += snd-soc-smdk-spdif.o
 obj-$(CONFIG_SND_SOC_GONI_AQUILA_WM8994) += snd-soc-goni-wm8994.o
Only in fa-linux-2.6.38/sound/soc/samsung: mini6410_wm9713.c
